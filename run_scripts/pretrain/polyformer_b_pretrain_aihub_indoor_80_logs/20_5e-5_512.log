/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/distributed/launch.py:188: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torchrun.
Note that --use_env is set by default in torchrun.
If your script expects `--local_rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  FutureWarning,
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
2024-10-31 03:18:50 - file_utils.py[line:39] - INFO: PyTorch version 1.13.1+cu117 available.
2024-10-31 03:18:50 - file_utils.py[line:39] - INFO: PyTorch version 1.13.1+cu117 available.
2024-10-31 03:18:50 - file_utils.py[line:39] - INFO: PyTorch version 1.13.1+cu117 available.
2024-10-31 03:18:50 - file_utils.py[line:39] - INFO: PyTorch version 1.13.1+cu117 available.
2024-10-31 03:18:50 - file_utils.py[line:39] - INFO: PyTorch version 1.13.1+cu117 available.
2024-10-31 03:18:50 - file_utils.py[line:39] - INFO: PyTorch version 1.13.1+cu117 available.
2024-10-31 03:18:50 - file_utils.py[line:39] - INFO: PyTorch version 1.13.1+cu117 available.
2024-10-31 03:18:50 - file_utils.py[line:39] - INFO: PyTorch version 1.13.1+cu117 available.
2024-10-31 03:18:57 - utils.py[line:258] - INFO: distributed init (rank 7): env://
2024-10-31 03:18:57 - utils.py[line:261] - INFO: Start init
2024-10-31 03:18:57 - utils.py[line:258] - INFO: distributed init (rank 0): env://
2024-10-31 03:18:57 - utils.py[line:261] - INFO: Start init
2024-10-31 03:18:57 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:1 to store for rank: 7
2024-10-31 03:18:57 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:1 to store for rank: 0
2024-10-31 03:18:57 - utils.py[line:258] - INFO: distributed init (rank 4): env://
2024-10-31 03:18:57 - utils.py[line:261] - INFO: Start init
2024-10-31 03:18:57 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:1 to store for rank: 4
2024-10-31 03:18:57 - utils.py[line:258] - INFO: distributed init (rank 6): env://
2024-10-31 03:18:57 - utils.py[line:261] - INFO: Start init
2024-10-31 03:18:57 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:1 to store for rank: 6
2024-10-31 03:18:57 - utils.py[line:258] - INFO: distributed init (rank 1): env://
2024-10-31 03:18:57 - utils.py[line:261] - INFO: Start init
2024-10-31 03:18:57 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:1 to store for rank: 1
2024-10-31 03:18:57 - utils.py[line:258] - INFO: distributed init (rank 5): env://
2024-10-31 03:18:57 - utils.py[line:261] - INFO: Start init
2024-10-31 03:18:57 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:1 to store for rank: 5
2024-10-31 03:18:57 - utils.py[line:258] - INFO: distributed init (rank 2): env://
2024-10-31 03:18:57 - utils.py[line:261] - INFO: Start init
2024-10-31 03:18:57 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:1 to store for rank: 2
2024-10-31 03:18:57 - utils.py[line:258] - INFO: distributed init (rank 3): env://
2024-10-31 03:18:57 - utils.py[line:261] - INFO: Start init
2024-10-31 03:18:57 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:1 to store for rank: 3
2024-10-31 03:18:57 - distributed_c10d.py[line:354] - INFO: Rank 3: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
2024-10-31 03:18:57 - utils.py[line:274] - INFO: initialized host cheetah-676973745f61696c6162-gzn5in-5cbcd8c768-b46pk as rank 3
single-machine distributed training is initialized.
2024-10-31 03:18:57 - distributed_c10d.py[line:354] - INFO: Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
2024-10-31 03:18:57 - utils.py[line:274] - INFO: initialized host cheetah-676973745f61696c6162-gzn5in-5cbcd8c768-b46pk as rank 1
single-machine distributed training is initialized.
2024-10-31 03:18:57 - distributed_c10d.py[line:354] - INFO: Rank 4: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
2024-10-31 03:18:57 - utils.py[line:274] - INFO: initialized host cheetah-676973745f61696c6162-gzn5in-5cbcd8c768-b46pk as rank 4
single-machine distributed training is initialized.
2024-10-31 03:18:57 - distributed_c10d.py[line:354] - INFO: Rank 5: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
2024-10-31 03:18:57 - utils.py[line:274] - INFO: initialized host cheetah-676973745f61696c6162-gzn5in-5cbcd8c768-b46pk as rank 5
single-machine distributed training is initialized.
2024-10-31 03:18:57 - distributed_c10d.py[line:354] - INFO: Rank 2: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
2024-10-31 03:18:57 - utils.py[line:274] - INFO: initialized host cheetah-676973745f61696c6162-gzn5in-5cbcd8c768-b46pk as rank 2
single-machine distributed training is initialized.
2024-10-31 03:18:57 - distributed_c10d.py[line:354] - INFO: Rank 7: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
2024-10-31 03:18:57 - utils.py[line:274] - INFO: initialized host cheetah-676973745f61696c6162-gzn5in-5cbcd8c768-b46pk as rank 7
single-machine distributed training is initialized.
2024-10-31 03:18:57 - distributed_c10d.py[line:354] - INFO: Rank 6: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
2024-10-31 03:18:57 - utils.py[line:274] - INFO: initialized host cheetah-676973745f61696c6162-gzn5in-5cbcd8c768-b46pk as rank 6
single-machine distributed training is initialized.
2024-10-31 03:18:57 - distributed_c10d.py[line:354] - INFO: Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
2024-10-31 03:18:57 - utils.py[line:274] - INFO: initialized host cheetah-676973745f61696c6162-gzn5in-5cbcd8c768-b46pk as rank 0
single-machine distributed training is initialized.
2024-10-31 03:19:02 - train.py[line:77] - INFO: {'_name': None, 'common': {'_name': None, 'no_progress_bar': False, 'log_interval': 10, 'log_format': 'simple', 'log_file': None, 'tensorboard_logdir': None, 'wandb_project': None, 'azureml_logging': False, 'seed': 1, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': True, 'memory_efficient_fp16': False, 'fp16_no_flatten_grads': False, 'fp16_init_scale': 128, 'fp16_scale_window': 512, 'fp16_scale_tolerance': 0.0, 'on_cpu_convert_precision': False, 'min_loss_scale': 0.0001, 'threshold_loss_scale': None, 'amp': False, 'amp_batch_retries': 2, 'amp_init_scale': 128, 'amp_scale_window': None, 'user_dir': '../../polyformer_module', 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma'}, 'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None}, 'distributed_training': {'_name': None, 'distributed_world_size': 8, 'distributed_num_procs': 8, 'distributed_rank': 0, 'distributed_backend': 'nccl', 'distributed_init_method': 'env://', 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': True, 'ddp_backend': 'pytorch_ddp', 'ddp_comm_hook': 'none', 'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': True, 'gradient_as_bucket_view': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 'slowmo_momentum': None, 'slowmo_algorithm': 'LocalSGD', 'localsgd_frequency': 3, 'nprocs_per_node': 8, 'pipeline_model_parallel': False, 'pipeline_balance': None, 'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 'pipeline_decoder_devices': None, 'pipeline_checkpoint': 'never', 'zero_sharding': 'none', 'fp16': True, 'memory_efficient_fp16': False, 'tpu': False, 'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False}, 'dataset': {'_name': None, 'num_workers': 0, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': None, 'batch_size': 20, 'required_batch_size_multiple': 8, 'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train', 'valid_subset': 'valid', 'combine_valid_subsets': None, 'ignore_unused_valid_subsets': False, 'validate_interval': 1, 'validate_interval_updates': 1000, 'validate_after_updates': 0, 'fixed_validation_seed': 7, 'disable_validation': False, 'max_tokens_valid': None, 'batch_size_valid': 20, 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 'shard_id': 0}, 'optimization': {'_name': None, 'max_epoch': 20, 'max_update': 0, 'stop_time_hours': 0.0, 'clip_norm': 1.0, 'sentence_avg': False, 'update_freq': [8], 'lr': [5e-05], 'stop_min_lr': -1.0, 'use_bmuf': False}, 'checkpoint': {'_name': None, 'save_dir': './polyformer_b_pretrain_aihub_indoor_80_checkpoints/20_5e-5_512', 'restore_file': 'checkpoint_last.pt', 'finetune_from_model': None, 'reset_dataloader': True, 'reset_lr_scheduler': False, 'reset_meters': True, 'reset_optimizer': True, 'optimizer_overrides': '{}', 'save_interval': 1, 'save_interval_updates': 1000, 'keep_interval_updates': -1, 'keep_interval_updates_pattern': -1, 'keep_last_epochs': -1, 'keep_best_checkpoints': 1, 'no_save': False, 'no_epoch_checkpoints': True, 'no_last_checkpoints': False, 'no_save_optimizer_state': False, 'best_checkpoint_metric': 'score', 'maximize_best_checkpoint_metric': True, 'patience': -1, 'checkpoint_suffix': '', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 'write_checkpoints_asynchronously': False, 'model_parallel_size': 1, 'use_ema_weights_to_init_param': False, 'use_latest_weights_to_init_ema': False}, 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': 8}, 'generation': {'_name': None, 'beam': 5, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 'no_beamable_mm': False, 'lenpen': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 'context_window': 0, 'softmax_batch': 9223372036854775807}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 'model': Namespace(_name='polyformer_b', activation_fn='gelu', adam_betas='(0.9,0.999)', adam_eps=1e-08, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, add_type_embedding=True, all_gather_list_size=16384, amp=False, amp_batch_retries=2, amp_init_scale=128, amp_scale_window=None, arch='polyformer_b', attention_dropout=0.0, attn_scale_factor=2, azureml_logging=False, batch_size=20, batch_size_valid=20, best_checkpoint_metric='score', bf16=False, bpe=None, bpe_dir='../../utils/BPE', broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=1.0, cls_weight=0.0, code_dict_size=8192, code_image_size=128, code_layernorm_embedding=True, combine_valid_subsets=None, constraint_range=None, cpu=False, cpu_offload=False, criterion='adjust_label_smoothed_cross_entropy', cross_self_attention=False, curriculum=0, data='../../datasets/pretrain/train_aihub_indoor_80.tsv,../../datasets/pretrain/val_aihub_indoor.tsv', data_buffer_size=10, dataset_impl=None, ddp_backend='pytorch_ddp', ddp_comm_hook='none', decoder_attention_heads=12, decoder_drop_path_rate=0.1, decoder_embed_dim=768, decoder_embed_path=None, decoder_ffn_embed_dim=3072, decoder_input_dim=768, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=True, decoder_normalize_before=True, decoder_output_dim=768, det_weight=1.0, device_id=0, disable_entangle=True, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=8, distributed_port=-1, distributed_rank=0, distributed_world_size=8, drop_worst_after=0, drop_worst_ratio=0.0, dropout=0.1, ema_decay=0.9999, ema_fp32=False, ema_seed_model=None, ema_start_update=0, ema_update_freq=1, empty_cache_freq=0, encoder_attention_heads=12, encoder_drop_path_rate=0.1, encoder_embed_dim=768, encoder_embed_path=None, encoder_ffn_embed_dim=3072, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=True, encoder_normalize_before=True, end_learning_rate=0.0, entangle_position_embedding=False, eos=2, eval_acc=True, eval_args='{"beam":5,"min_len":2,"max_len_a":0,"max_len_b":2}', eval_print_samples=False, fast_stat_sync=False, find_unused_parameters=True, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=7, force_anneal=None, fp16=True, fp16_adam_stats=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=512, fp32_reduce_scatter=False, freeze_decoder_embedding=False, freeze_encoder_embedding=False, gen_subset='test', gradient_as_bucket_view=False, heartbeat_timeout=-1, ignore_eos=False, ignore_prefix_size=0, ignore_unused_valid_subsets=False, image_bucket_size=42, imagenet_default_mean_and_std=False, keep_best_checkpoints=1, keep_interval_updates=-1, keep_interval_updates_pattern=-1, keep_last_epochs=-1, label_smoothing=0.1, layernorm_embedding=True, load_checkpoint_on_all_dp_ranks=False, localsgd_frequency=3, log_file=None, log_format='simple', log_interval=10, lr=[5e-05], lr_scheduler='polynomial_decay', max_epoch=20, max_image_size=512, max_source_positions=1024, max_src_length=80, max_target_positions=1024, max_tgt_length=420, max_tokens=None, max_tokens_valid=None, max_update=0, max_valid_steps=None, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_params_to_wrap=100000000, model_parallel_size=1, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_reshard_after_forward=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=True, no_seed_provided=False, no_token_positional_embeddings=False, nprocs_per_node=8, num_bins=64, num_shards=1, num_workers=0, on_cpu_convert_precision=False, optimizer='adam', optimizer_overrides='{}', out_index=3, pad=1, patch_image_size=512, patch_layernorm_embedding=True, patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, plasma_path='/tmp/plasma', pooler_activation_fn='tanh', pooler_classifier='mlp', pooler_dropout=0.0, power=1.0, profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, reg_alpha=1.0, relu_dropout=0.0, report_accuracy=False, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=True, reset_logging=False, reset_lr_scheduler=False, reset_meters=True, reset_optimizer=True, resnet_drop_path_rate=0.0, restore_file='checkpoint_last.pt', sample_patch_num=196, save_dir='./polyformer_b_pretrain_aihub_indoor_80_checkpoints/20_5e-5_512', save_interval=1, save_interval_updates=1000, scale_attn=True, scale_fc=True, scale_heads=True, scale_resids=False, scoring='bleu', scst=False, scst_args='{}', seed=1, selected_cols='0,3,1,2', sentence_avg=False, shard_id=0, share_all_embeddings=True, share_decoder_input_output_embed=True, simul_type=None, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, stop_min_lr=-1.0, stop_time_hours=0, store_ema=False, suppress_crashes=False, sync_bn=False, task='refcoco_pretrain', tensorboard_logdir=None, threshold_loss_scale=None, token_bucket_size=256, tokenizer=None, total_num_update=1000000, tpu=False, train_subset='train', unk=3, update_freq=[8], use_bmuf=False, use_ema_weights_to_init_param=False, use_latest_weights_to_init_ema=False, use_old_adam=False, use_plasma_view=False, use_rdrop=False, use_sharded_state=False, user_dir='../../polyformer_module', uses_ema=False, valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=1000, vis_encoder_type='swin-base', wandb_project=None, warmup_ratio=0.06, warmup_updates=0, weight_decay=0.01, write_checkpoints_asynchronously=False, zero_sharding='none'), 'task': {'_name': 'refcoco_pretrain', 'data': '../../datasets/pretrain/train_aihub_indoor_80.tsv,../../datasets/pretrain/val_aihub_indoor.tsv', 'selected_cols': '0,3,1,2', 'bpe_dir': '../../utils/BPE', 'max_source_positions': 1024, 'max_target_positions': 1024, 'max_src_length': 80, 'max_tgt_length': 420, 'code_dict_size': 8192, 'patch_image_size': 512, 'num_bins': 64, 'imagenet_default_mean_and_std': False, 'constraint_range': None, 'eval_acc': True, 'eval_args': '{"beam":5,"min_len":2,"max_len_a":0,"max_len_b":2}', 'uses_ema': False, 'eval_print_samples': False, 'max_image_size': 512, 'scst': False, 'scst_args': '{}'}, 'criterion': {'_name': 'adjust_label_smoothed_cross_entropy', 'label_smoothing': 0.1, 'report_accuracy': False, 'det_weight': 1.0, 'cls_weight': 0.0, 'ignore_prefix_size': 0, 'ignore_eos': False, 'sentence_avg': False, 'drop_worst_ratio': 0.0, 'drop_worst_after': 0, 'use_rdrop': False, 'reg_alpha': 1.0, 'sample_patch_num': 196, 'constraint_range': None}, 'optimizer': {'_name': 'adam', 'adam_betas': '(0.9,0.999)', 'adam_eps': 1e-08, 'weight_decay': 0.01, 'use_old_adam': False, 'fp16_adam_stats': False, 'tpu': False, 'lr': [5e-05]}, 'lr_scheduler': {'_name': 'polynomial_decay', 'warmup_updates': 0, 'warmup_ratio': 0.06, 'force_anneal': None, 'end_learning_rate': 0.0, 'power': 1.0, 'total_num_update': 1000000.0, 'lr': [5e-05]}, 'scoring': {'_name': 'bleu', 'pad': 1, 'eos': 2, 'unk': 3}, 'bpe': None, 'tokenizer': None, 'ema': {'_name': None, 'store_ema': False, 'ema_decay': 0.9999, 'ema_start_update': 0, 'ema_seed_model': None, 'ema_update_freq': 1, 'ema_fp32': False}, 'simul_type': None}
2024-10-31 03:19:02 - base_task.py[line:187] - INFO: source dictionary: 4100 types
2024-10-31 03:19:02 - base_task.py[line:188] - INFO: target dictionary: 4100 types
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
The model and loaded state dict do not match exactly

unexpected key in source state_dict: norm.weight, norm.bias, head.weight, head.bias, layers.0.blocks.1.attn_mask, layers.1.blocks.1.attn_mask, layers.2.blocks.1.attn_mask, layers.2.blocks.3.attn_mask, layers.2.blocks.5.attn_mask, layers.2.blocks.7.attn_mask, layers.2.blocks.9.attn_mask, layers.2.blocks.11.attn_mask, layers.2.blocks.13.attn_mask, layers.2.blocks.15.attn_mask, layers.2.blocks.17.attn_mask

missing keys in source state_dict: norm3.weight, norm3.bias

Loaded Swin Pretrained Weights ../../pretrained_weights/swin_base_patch4_window12_384_22k.pth
Loaded Swin Pretrained Weights ../../pretrained_weights/swin_base_patch4_window12_384_22k.pth
Loaded Swin Pretrained Weights ../../pretrained_weights/swin_base_patch4_window12_384_22k.pth
Loaded Swin Pretrained Weights ../../pretrained_weights/swin_base_patch4_window12_384_22k.pth
Loaded Swin Pretrained Weights ../../pretrained_weights/swin_base_patch4_window12_384_22k.pth
Loaded Swin Pretrained Weights ../../pretrained_weights/swin_base_patch4_window12_384_22k.pth
Loaded Swin Pretrained Weights ../../pretrained_weights/swin_base_patch4_window12_384_22k.pth
Loaded Swin Pretrained Weights ../../pretrained_weights/swin_base_patch4_window12_384_22k.pth
2024-10-31 03:19:16 - base_task.py[line:85] - WARNING: Some weights of the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin were not used when initializing XLMRobertaForMaskedLM: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias']
- This IS expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2024-10-31 03:19:16 - base_task.py[line:96] - WARNING: Some weights of XLMRobertaForMaskedLM were not initialized from the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin and are newly initialized: ['bert.roberta.embeddings.position_ids', 'bert.roberta.embeddings.word_embeddings.weight', 'bert.roberta.embeddings.position_embeddings.weight', 'bert.roberta.embeddings.token_type_embeddings.weight', 'bert.roberta.embeddings.LayerNorm.weight', 'bert.roberta.embeddings.LayerNorm.bias', 'bert.roberta.encoder.layer.0.attention.self.query.weight', 'bert.roberta.encoder.layer.0.attention.self.query.bias', 'bert.roberta.encoder.layer.0.attention.self.key.weight', 'bert.roberta.encoder.layer.0.attention.self.key.bias', 'bert.roberta.encoder.layer.0.attention.self.value.weight', 'bert.roberta.encoder.layer.0.attention.self.value.bias', 'bert.roberta.encoder.layer.0.attention.output.dense.weight', 'bert.roberta.encoder.layer.0.attention.output.dense.bias', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.0.intermediate.dense.weight', 'bert.roberta.encoder.layer.0.intermediate.dense.bias', 'bert.roberta.encoder.layer.0.output.dense.weight', 'bert.roberta.encoder.layer.0.output.dense.bias', 'bert.roberta.encoder.layer.0.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.attention.self.query.weight', 'bert.roberta.encoder.layer.1.attention.self.query.bias', 'bert.roberta.encoder.layer.1.attention.self.key.weight', 'bert.roberta.encoder.layer.1.attention.self.key.bias', 'bert.roberta.encoder.layer.1.attention.self.value.weight', 'bert.roberta.encoder.layer.1.attention.self.value.bias', 'bert.roberta.encoder.layer.1.attention.output.dense.weight', 'bert.roberta.encoder.layer.1.attention.output.dense.bias', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.intermediate.dense.weight', 'bert.roberta.encoder.layer.1.intermediate.dense.bias', 'bert.roberta.encoder.layer.1.output.dense.weight', 'bert.roberta.encoder.layer.1.output.dense.bias', 'bert.roberta.encoder.layer.1.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.attention.self.query.weight', 'bert.roberta.encoder.layer.2.attention.self.query.bias', 'bert.roberta.encoder.layer.2.attention.self.key.weight', 'bert.roberta.encoder.layer.2.attention.self.key.bias', 'bert.roberta.encoder.layer.2.attention.self.value.weight', 'bert.roberta.encoder.layer.2.attention.self.value.bias', 'bert.roberta.encoder.layer.2.attention.output.dense.weight', 'bert.roberta.encoder.layer.2.attention.output.dense.bias', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.intermediate.dense.weight', 'bert.roberta.encoder.layer.2.intermediate.dense.bias', 'bert.roberta.encoder.layer.2.output.dense.weight', 'bert.roberta.encoder.layer.2.output.dense.bias', 'bert.roberta.encoder.layer.2.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.attention.self.query.weight', 'bert.roberta.encoder.layer.3.attention.self.query.bias', 'bert.roberta.encoder.layer.3.attention.self.key.weight', 'bert.roberta.encoder.layer.3.attention.self.key.bias', 'bert.roberta.encoder.layer.3.attention.self.value.weight', 'bert.roberta.encoder.layer.3.attention.self.value.bias', 'bert.roberta.encoder.layer.3.attention.output.dense.weight', 'bert.roberta.encoder.layer.3.attention.output.dense.bias', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.intermediate.dense.weight', 'bert.roberta.encoder.layer.3.intermediate.dense.bias', 'bert.roberta.encoder.layer.3.output.dense.weight', 'bert.roberta.encoder.layer.3.output.dense.bias', 'bert.roberta.encoder.layer.3.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.attention.self.query.weight', 'bert.roberta.encoder.layer.4.attention.self.query.bias', 'bert.roberta.encoder.layer.4.attention.self.key.weight', 'bert.roberta.encoder.layer.4.attention.self.key.bias', 'bert.roberta.encoder.layer.4.attention.self.value.weight', 'bert.roberta.encoder.layer.4.attention.self.value.bias', 'bert.roberta.encoder.layer.4.attention.output.dense.weight', 'bert.roberta.encoder.layer.4.attention.output.dense.bias', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.intermediate.dense.weight', 'bert.roberta.encoder.layer.4.intermediate.dense.bias', 'bert.roberta.encoder.layer.4.output.dense.weight', 'bert.roberta.encoder.layer.4.output.dense.bias', 'bert.roberta.encoder.layer.4.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.attention.self.query.weight', 'bert.roberta.encoder.layer.5.attention.self.query.bias', 'bert.roberta.encoder.layer.5.attention.self.key.weight', 'bert.roberta.encoder.layer.5.attention.self.key.bias', 'bert.roberta.encoder.layer.5.attention.self.value.weight', 'bert.roberta.encoder.layer.5.attention.self.value.bias', 'bert.roberta.encoder.layer.5.attention.output.dense.weight', 'bert.roberta.encoder.layer.5.attention.output.dense.bias', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.intermediate.dense.weight', 'bert.roberta.encoder.layer.5.intermediate.dense.bias', 'bert.roberta.encoder.layer.5.output.dense.weight', 'bert.roberta.encoder.layer.5.output.dense.bias', 'bert.roberta.encoder.layer.5.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.attention.self.query.weight', 'bert.roberta.encoder.layer.6.attention.self.query.bias', 'bert.roberta.encoder.layer.6.attention.self.key.weight', 'bert.roberta.encoder.layer.6.attention.self.key.bias', 'bert.roberta.encoder.layer.6.attention.self.value.weight', 'bert.roberta.encoder.layer.6.attention.self.value.bias', 'bert.roberta.encoder.layer.6.attention.output.dense.weight', 'bert.roberta.encoder.layer.6.attention.output.dense.bias', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.intermediate.dense.weight', 'bert.roberta.encoder.layer.6.intermediate.dense.bias', 'bert.roberta.encoder.layer.6.output.dense.weight', 'bert.roberta.encoder.layer.6.output.dense.bias', 'bert.roberta.encoder.layer.6.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.attention.self.query.weight', 'bert.roberta.encoder.layer.7.attention.self.query.bias', 'bert.roberta.encoder.layer.7.attention.self.key.weight', 'bert.roberta.encoder.layer.7.attention.self.key.bias', 'bert.roberta.encoder.layer.7.attention.self.value.weight', 'bert.roberta.encoder.layer.7.attention.self.value.bias', 'bert.roberta.encoder.layer.7.attention.output.dense.weight', 'bert.roberta.encoder.layer.7.attention.output.dense.bias', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.intermediate.dense.weight', 'bert.roberta.encoder.layer.7.intermediate.dense.bias', 'bert.roberta.encoder.layer.7.output.dense.weight', 'bert.roberta.encoder.layer.7.output.dense.bias', 'bert.roberta.encoder.layer.7.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.attention.self.query.weight', 'bert.roberta.encoder.layer.8.attention.self.query.bias', 'bert.roberta.encoder.layer.8.attention.self.key.weight', 'bert.roberta.encoder.layer.8.attention.self.key.bias', 'bert.roberta.encoder.layer.8.attention.self.value.weight', 'bert.roberta.encoder.layer.8.attention.self.value.bias', 'bert.roberta.encoder.layer.8.attention.output.dense.weight', 'bert.roberta.encoder.layer.8.attention.output.dense.bias', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.intermediate.dense.weight', 'bert.roberta.encoder.layer.8.intermediate.dense.bias', 'bert.roberta.encoder.layer.8.output.dense.weight', 'bert.roberta.encoder.layer.8.output.dense.bias', 'bert.roberta.encoder.layer.8.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.attention.self.query.weight', 'bert.roberta.encoder.layer.9.attention.self.query.bias', 'bert.roberta.encoder.layer.9.attention.self.key.weight', 'bert.roberta.encoder.layer.9.attention.self.key.bias', 'bert.roberta.encoder.layer.9.attention.self.value.weight', 'bert.roberta.encoder.layer.9.attention.self.value.bias', 'bert.roberta.encoder.layer.9.attention.output.dense.weight', 'bert.roberta.encoder.layer.9.attention.output.dense.bias', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.intermediate.dense.weight', 'bert.roberta.encoder.layer.9.intermediate.dense.bias', 'bert.roberta.encoder.layer.9.output.dense.weight', 'bert.roberta.encoder.layer.9.output.dense.bias', 'bert.roberta.encoder.layer.9.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.attention.self.query.weight', 'bert.roberta.encoder.layer.10.attention.self.query.bias', 'bert.roberta.encoder.layer.10.attention.self.key.weight', 'bert.roberta.encoder.layer.10.attention.self.key.bias', 'bert.roberta.encoder.layer.10.attention.self.value.weight', 'bert.roberta.encoder.layer.10.attention.self.value.bias', 'bert.roberta.encoder.layer.10.attention.output.dense.weight', 'bert.roberta.encoder.layer.10.attention.output.dense.bias', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.intermediate.dense.weight', 'bert.roberta.encoder.layer.10.intermediate.dense.bias', 'bert.roberta.encoder.layer.10.output.dense.weight', 'bert.roberta.encoder.layer.10.output.dense.bias', 'bert.roberta.encoder.layer.10.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.attention.self.query.weight', 'bert.roberta.encoder.layer.11.attention.self.query.bias', 'bert.roberta.encoder.layer.11.attention.self.key.weight', 'bert.roberta.encoder.layer.11.attention.self.key.bias', 'bert.roberta.encoder.layer.11.attention.self.value.weight', 'bert.roberta.encoder.layer.11.attention.self.value.bias', 'bert.roberta.encoder.layer.11.attention.output.dense.weight', 'bert.roberta.encoder.layer.11.attention.output.dense.bias', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.intermediate.dense.weight', 'bert.roberta.encoder.layer.11.intermediate.dense.bias', 'bert.roberta.encoder.layer.11.output.dense.weight', 'bert.roberta.encoder.layer.11.output.dense.bias', 'bert.roberta.encoder.layer.11.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.output.LayerNorm.bias', 'bert.lm_head.bias', 'bert.lm_head.dense.weight', 'bert.lm_head.dense.bias', 'bert.lm_head.layer_norm.weight', 'bert.lm_head.layer_norm.bias', 'bert.lm_head.decoder.weight', 'bert.lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
2024-10-31 03:19:16 - base_task.py[line:85] - WARNING: Some weights of the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin were not used when initializing XLMRobertaForMaskedLM: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias']
- This IS expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2024-10-31 03:19:16 - base_task.py[line:96] - WARNING: Some weights of XLMRobertaForMaskedLM were not initialized from the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin and are newly initialized: ['bert.roberta.embeddings.position_ids', 'bert.roberta.embeddings.word_embeddings.weight', 'bert.roberta.embeddings.position_embeddings.weight', 'bert.roberta.embeddings.token_type_embeddings.weight', 'bert.roberta.embeddings.LayerNorm.weight', 'bert.roberta.embeddings.LayerNorm.bias', 'bert.roberta.encoder.layer.0.attention.self.query.weight', 'bert.roberta.encoder.layer.0.attention.self.query.bias', 'bert.roberta.encoder.layer.0.attention.self.key.weight', 'bert.roberta.encoder.layer.0.attention.self.key.bias', 'bert.roberta.encoder.layer.0.attention.self.value.weight', 'bert.roberta.encoder.layer.0.attention.self.value.bias', 'bert.roberta.encoder.layer.0.attention.output.dense.weight', 'bert.roberta.encoder.layer.0.attention.output.dense.bias', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.0.intermediate.dense.weight', 'bert.roberta.encoder.layer.0.intermediate.dense.bias', 'bert.roberta.encoder.layer.0.output.dense.weight', 'bert.roberta.encoder.layer.0.output.dense.bias', 'bert.roberta.encoder.layer.0.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.attention.self.query.weight', 'bert.roberta.encoder.layer.1.attention.self.query.bias', 'bert.roberta.encoder.layer.1.attention.self.key.weight', 'bert.roberta.encoder.layer.1.attention.self.key.bias', 'bert.roberta.encoder.layer.1.attention.self.value.weight', 'bert.roberta.encoder.layer.1.attention.self.value.bias', 'bert.roberta.encoder.layer.1.attention.output.dense.weight', 'bert.roberta.encoder.layer.1.attention.output.dense.bias', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.intermediate.dense.weight', 'bert.roberta.encoder.layer.1.intermediate.dense.bias', 'bert.roberta.encoder.layer.1.output.dense.weight', 'bert.roberta.encoder.layer.1.output.dense.bias', 'bert.roberta.encoder.layer.1.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.attention.self.query.weight', 'bert.roberta.encoder.layer.2.attention.self.query.bias', 'bert.roberta.encoder.layer.2.attention.self.key.weight', 'bert.roberta.encoder.layer.2.attention.self.key.bias', 'bert.roberta.encoder.layer.2.attention.self.value.weight', 'bert.roberta.encoder.layer.2.attention.self.value.bias', 'bert.roberta.encoder.layer.2.attention.output.dense.weight', 'bert.roberta.encoder.layer.2.attention.output.dense.bias', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.intermediate.dense.weight', 'bert.roberta.encoder.layer.2.intermediate.dense.bias', 'bert.roberta.encoder.layer.2.output.dense.weight', 'bert.roberta.encoder.layer.2.output.dense.bias', 'bert.roberta.encoder.layer.2.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.attention.self.query.weight', 'bert.roberta.encoder.layer.3.attention.self.query.bias', 'bert.roberta.encoder.layer.3.attention.self.key.weight', 'bert.roberta.encoder.layer.3.attention.self.key.bias', 'bert.roberta.encoder.layer.3.attention.self.value.weight', 'bert.roberta.encoder.layer.3.attention.self.value.bias', 'bert.roberta.encoder.layer.3.attention.output.dense.weight', 'bert.roberta.encoder.layer.3.attention.output.dense.bias', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.intermediate.dense.weight', 'bert.roberta.encoder.layer.3.intermediate.dense.bias', 'bert.roberta.encoder.layer.3.output.dense.weight', 'bert.roberta.encoder.layer.3.output.dense.bias', 'bert.roberta.encoder.layer.3.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.attention.self.query.weight', 'bert.roberta.encoder.layer.4.attention.self.query.bias', 'bert.roberta.encoder.layer.4.attention.self.key.weight', 'bert.roberta.encoder.layer.4.attention.self.key.bias', 'bert.roberta.encoder.layer.4.attention.self.value.weight', 'bert.roberta.encoder.layer.4.attention.self.value.bias', 'bert.roberta.encoder.layer.4.attention.output.dense.weight', 'bert.roberta.encoder.layer.4.attention.output.dense.bias', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.intermediate.dense.weight', 'bert.roberta.encoder.layer.4.intermediate.dense.bias', 'bert.roberta.encoder.layer.4.output.dense.weight', 'bert.roberta.encoder.layer.4.output.dense.bias', 'bert.roberta.encoder.layer.4.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.attention.self.query.weight', 'bert.roberta.encoder.layer.5.attention.self.query.bias', 'bert.roberta.encoder.layer.5.attention.self.key.weight', 'bert.roberta.encoder.layer.5.attention.self.key.bias', 'bert.roberta.encoder.layer.5.attention.self.value.weight', 'bert.roberta.encoder.layer.5.attention.self.value.bias', 'bert.roberta.encoder.layer.5.attention.output.dense.weight', 'bert.roberta.encoder.layer.5.attention.output.dense.bias', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.intermediate.dense.weight', 'bert.roberta.encoder.layer.5.intermediate.dense.bias', 'bert.roberta.encoder.layer.5.output.dense.weight', 'bert.roberta.encoder.layer.5.output.dense.bias', 'bert.roberta.encoder.layer.5.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.attention.self.query.weight', 'bert.roberta.encoder.layer.6.attention.self.query.bias', 'bert.roberta.encoder.layer.6.attention.self.key.weight', 'bert.roberta.encoder.layer.6.attention.self.key.bias', 'bert.roberta.encoder.layer.6.attention.self.value.weight', 'bert.roberta.encoder.layer.6.attention.self.value.bias', 'bert.roberta.encoder.layer.6.attention.output.dense.weight', 'bert.roberta.encoder.layer.6.attention.output.dense.bias', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.intermediate.dense.weight', 'bert.roberta.encoder.layer.6.intermediate.dense.bias', 'bert.roberta.encoder.layer.6.output.dense.weight', 'bert.roberta.encoder.layer.6.output.dense.bias', 'bert.roberta.encoder.layer.6.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.attention.self.query.weight', 'bert.roberta.encoder.layer.7.attention.self.query.bias', 'bert.roberta.encoder.layer.7.attention.self.key.weight', 'bert.roberta.encoder.layer.7.attention.self.key.bias', 'bert.roberta.encoder.layer.7.attention.self.value.weight', 'bert.roberta.encoder.layer.7.attention.self.value.bias', 'bert.roberta.encoder.layer.7.attention.output.dense.weight', 'bert.roberta.encoder.layer.7.attention.output.dense.bias', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.intermediate.dense.weight', 'bert.roberta.encoder.layer.7.intermediate.dense.bias', 'bert.roberta.encoder.layer.7.output.dense.weight', 'bert.roberta.encoder.layer.7.output.dense.bias', 'bert.roberta.encoder.layer.7.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.attention.self.query.weight', 'bert.roberta.encoder.layer.8.attention.self.query.bias', 'bert.roberta.encoder.layer.8.attention.self.key.weight', 'bert.roberta.encoder.layer.8.attention.self.key.bias', 'bert.roberta.encoder.layer.8.attention.self.value.weight', 'bert.roberta.encoder.layer.8.attention.self.value.bias', 'bert.roberta.encoder.layer.8.attention.output.dense.weight', 'bert.roberta.encoder.layer.8.attention.output.dense.bias', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.intermediate.dense.weight', 'bert.roberta.encoder.layer.8.intermediate.dense.bias', 'bert.roberta.encoder.layer.8.output.dense.weight', 'bert.roberta.encoder.layer.8.output.dense.bias', 'bert.roberta.encoder.layer.8.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.attention.self.query.weight', 'bert.roberta.encoder.layer.9.attention.self.query.bias', 'bert.roberta.encoder.layer.9.attention.self.key.weight', 'bert.roberta.encoder.layer.9.attention.self.key.bias', 'bert.roberta.encoder.layer.9.attention.self.value.weight', 'bert.roberta.encoder.layer.9.attention.self.value.bias', 'bert.roberta.encoder.layer.9.attention.output.dense.weight', 'bert.roberta.encoder.layer.9.attention.output.dense.bias', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.intermediate.dense.weight', 'bert.roberta.encoder.layer.9.intermediate.dense.bias', 'bert.roberta.encoder.layer.9.output.dense.weight', 'bert.roberta.encoder.layer.9.output.dense.bias', 'bert.roberta.encoder.layer.9.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.attention.self.query.weight', 'bert.roberta.encoder.layer.10.attention.self.query.bias', 'bert.roberta.encoder.layer.10.attention.self.key.weight', 'bert.roberta.encoder.layer.10.attention.self.key.bias', 'bert.roberta.encoder.layer.10.attention.self.value.weight', 'bert.roberta.encoder.layer.10.attention.self.value.bias', 'bert.roberta.encoder.layer.10.attention.output.dense.weight', 'bert.roberta.encoder.layer.10.attention.output.dense.bias', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.intermediate.dense.weight', 'bert.roberta.encoder.layer.10.intermediate.dense.bias', 'bert.roberta.encoder.layer.10.output.dense.weight', 'bert.roberta.encoder.layer.10.output.dense.bias', 'bert.roberta.encoder.layer.10.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.attention.self.query.weight', 'bert.roberta.encoder.layer.11.attention.self.query.bias', 'bert.roberta.encoder.layer.11.attention.self.key.weight', 'bert.roberta.encoder.layer.11.attention.self.key.bias', 'bert.roberta.encoder.layer.11.attention.self.value.weight', 'bert.roberta.encoder.layer.11.attention.self.value.bias', 'bert.roberta.encoder.layer.11.attention.output.dense.weight', 'bert.roberta.encoder.layer.11.attention.output.dense.bias', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.intermediate.dense.weight', 'bert.roberta.encoder.layer.11.intermediate.dense.bias', 'bert.roberta.encoder.layer.11.output.dense.weight', 'bert.roberta.encoder.layer.11.output.dense.bias', 'bert.roberta.encoder.layer.11.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.output.LayerNorm.bias', 'bert.lm_head.bias', 'bert.lm_head.dense.weight', 'bert.lm_head.dense.bias', 'bert.lm_head.layer_norm.weight', 'bert.lm_head.layer_norm.bias', 'bert.lm_head.decoder.weight', 'bert.lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
2024-10-31 03:19:16 - base_task.py[line:85] - WARNING: Some weights of the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin were not used when initializing XLMRobertaForMaskedLM: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias']
- This IS expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2024-10-31 03:19:16 - base_task.py[line:96] - WARNING: Some weights of XLMRobertaForMaskedLM were not initialized from the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin and are newly initialized: ['bert.roberta.embeddings.position_ids', 'bert.roberta.embeddings.word_embeddings.weight', 'bert.roberta.embeddings.position_embeddings.weight', 'bert.roberta.embeddings.token_type_embeddings.weight', 'bert.roberta.embeddings.LayerNorm.weight', 'bert.roberta.embeddings.LayerNorm.bias', 'bert.roberta.encoder.layer.0.attention.self.query.weight', 'bert.roberta.encoder.layer.0.attention.self.query.bias', 'bert.roberta.encoder.layer.0.attention.self.key.weight', 'bert.roberta.encoder.layer.0.attention.self.key.bias', 'bert.roberta.encoder.layer.0.attention.self.value.weight', 'bert.roberta.encoder.layer.0.attention.self.value.bias', 'bert.roberta.encoder.layer.0.attention.output.dense.weight', 'bert.roberta.encoder.layer.0.attention.output.dense.bias', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.0.intermediate.dense.weight', 'bert.roberta.encoder.layer.0.intermediate.dense.bias', 'bert.roberta.encoder.layer.0.output.dense.weight', 'bert.roberta.encoder.layer.0.output.dense.bias', 'bert.roberta.encoder.layer.0.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.attention.self.query.weight', 'bert.roberta.encoder.layer.1.attention.self.query.bias', 'bert.roberta.encoder.layer.1.attention.self.key.weight', 'bert.roberta.encoder.layer.1.attention.self.key.bias', 'bert.roberta.encoder.layer.1.attention.self.value.weight', 'bert.roberta.encoder.layer.1.attention.self.value.bias', 'bert.roberta.encoder.layer.1.attention.output.dense.weight', 'bert.roberta.encoder.layer.1.attention.output.dense.bias', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.intermediate.dense.weight', 'bert.roberta.encoder.layer.1.intermediate.dense.bias', 'bert.roberta.encoder.layer.1.output.dense.weight', 'bert.roberta.encoder.layer.1.output.dense.bias', 'bert.roberta.encoder.layer.1.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.attention.self.query.weight', 'bert.roberta.encoder.layer.2.attention.self.query.bias', 'bert.roberta.encoder.layer.2.attention.self.key.weight', 'bert.roberta.encoder.layer.2.attention.self.key.bias', 'bert.roberta.encoder.layer.2.attention.self.value.weight', 'bert.roberta.encoder.layer.2.attention.self.value.bias', 'bert.roberta.encoder.layer.2.attention.output.dense.weight', 'bert.roberta.encoder.layer.2.attention.output.dense.bias', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.intermediate.dense.weight', 'bert.roberta.encoder.layer.2.intermediate.dense.bias', 'bert.roberta.encoder.layer.2.output.dense.weight', 'bert.roberta.encoder.layer.2.output.dense.bias', 'bert.roberta.encoder.layer.2.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.attention.self.query.weight', 'bert.roberta.encoder.layer.3.attention.self.query.bias', 'bert.roberta.encoder.layer.3.attention.self.key.weight', 'bert.roberta.encoder.layer.3.attention.self.key.bias', 'bert.roberta.encoder.layer.3.attention.self.value.weight', 'bert.roberta.encoder.layer.3.attention.self.value.bias', 'bert.roberta.encoder.layer.3.attention.output.dense.weight', 'bert.roberta.encoder.layer.3.attention.output.dense.bias', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.intermediate.dense.weight', 'bert.roberta.encoder.layer.3.intermediate.dense.bias', 'bert.roberta.encoder.layer.3.output.dense.weight', 'bert.roberta.encoder.layer.3.output.dense.bias', 'bert.roberta.encoder.layer.3.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.attention.self.query.weight', 'bert.roberta.encoder.layer.4.attention.self.query.bias', 'bert.roberta.encoder.layer.4.attention.self.key.weight', 'bert.roberta.encoder.layer.4.attention.self.key.bias', 'bert.roberta.encoder.layer.4.attention.self.value.weight', 'bert.roberta.encoder.layer.4.attention.self.value.bias', 'bert.roberta.encoder.layer.4.attention.output.dense.weight', 'bert.roberta.encoder.layer.4.attention.output.dense.bias', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.intermediate.dense.weight', 'bert.roberta.encoder.layer.4.intermediate.dense.bias', 'bert.roberta.encoder.layer.4.output.dense.weight', 'bert.roberta.encoder.layer.4.output.dense.bias', 'bert.roberta.encoder.layer.4.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.attention.self.query.weight', 'bert.roberta.encoder.layer.5.attention.self.query.bias', 'bert.roberta.encoder.layer.5.attention.self.key.weight', 'bert.roberta.encoder.layer.5.attention.self.key.bias', 'bert.roberta.encoder.layer.5.attention.self.value.weight', 'bert.roberta.encoder.layer.5.attention.self.value.bias', 'bert.roberta.encoder.layer.5.attention.output.dense.weight', 'bert.roberta.encoder.layer.5.attention.output.dense.bias', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.intermediate.dense.weight', 'bert.roberta.encoder.layer.5.intermediate.dense.bias', 'bert.roberta.encoder.layer.5.output.dense.weight', 'bert.roberta.encoder.layer.5.output.dense.bias', 'bert.roberta.encoder.layer.5.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.attention.self.query.weight', 'bert.roberta.encoder.layer.6.attention.self.query.bias', 'bert.roberta.encoder.layer.6.attention.self.key.weight', 'bert.roberta.encoder.layer.6.attention.self.key.bias', 'bert.roberta.encoder.layer.6.attention.self.value.weight', 'bert.roberta.encoder.layer.6.attention.self.value.bias', 'bert.roberta.encoder.layer.6.attention.output.dense.weight', 'bert.roberta.encoder.layer.6.attention.output.dense.bias', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.intermediate.dense.weight', 'bert.roberta.encoder.layer.6.intermediate.dense.bias', 'bert.roberta.encoder.layer.6.output.dense.weight', 'bert.roberta.encoder.layer.6.output.dense.bias', 'bert.roberta.encoder.layer.6.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.attention.self.query.weight', 'bert.roberta.encoder.layer.7.attention.self.query.bias', 'bert.roberta.encoder.layer.7.attention.self.key.weight', 'bert.roberta.encoder.layer.7.attention.self.key.bias', 'bert.roberta.encoder.layer.7.attention.self.value.weight', 'bert.roberta.encoder.layer.7.attention.self.value.bias', 'bert.roberta.encoder.layer.7.attention.output.dense.weight', 'bert.roberta.encoder.layer.7.attention.output.dense.bias', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.intermediate.dense.weight', 'bert.roberta.encoder.layer.7.intermediate.dense.bias', 'bert.roberta.encoder.layer.7.output.dense.weight', 'bert.roberta.encoder.layer.7.output.dense.bias', 'bert.roberta.encoder.layer.7.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.attention.self.query.weight', 'bert.roberta.encoder.layer.8.attention.self.query.bias', 'bert.roberta.encoder.layer.8.attention.self.key.weight', 'bert.roberta.encoder.layer.8.attention.self.key.bias', 'bert.roberta.encoder.layer.8.attention.self.value.weight', 'bert.roberta.encoder.layer.8.attention.self.value.bias', 'bert.roberta.encoder.layer.8.attention.output.dense.weight', 'bert.roberta.encoder.layer.8.attention.output.dense.bias', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.intermediate.dense.weight', 'bert.roberta.encoder.layer.8.intermediate.dense.bias', 'bert.roberta.encoder.layer.8.output.dense.weight', 'bert.roberta.encoder.layer.8.output.dense.bias', 'bert.roberta.encoder.layer.8.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.attention.self.query.weight', 'bert.roberta.encoder.layer.9.attention.self.query.bias', 'bert.roberta.encoder.layer.9.attention.self.key.weight', 'bert.roberta.encoder.layer.9.attention.self.key.bias', 'bert.roberta.encoder.layer.9.attention.self.value.weight', 'bert.roberta.encoder.layer.9.attention.self.value.bias', 'bert.roberta.encoder.layer.9.attention.output.dense.weight', 'bert.roberta.encoder.layer.9.attention.output.dense.bias', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.intermediate.dense.weight', 'bert.roberta.encoder.layer.9.intermediate.dense.bias', 'bert.roberta.encoder.layer.9.output.dense.weight', 'bert.roberta.encoder.layer.9.output.dense.bias', 'bert.roberta.encoder.layer.9.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.attention.self.query.weight', 'bert.roberta.encoder.layer.10.attention.self.query.bias', 'bert.roberta.encoder.layer.10.attention.self.key.weight', 'bert.roberta.encoder.layer.10.attention.self.key.bias', 'bert.roberta.encoder.layer.10.attention.self.value.weight', 'bert.roberta.encoder.layer.10.attention.self.value.bias', 'bert.roberta.encoder.layer.10.attention.output.dense.weight', 'bert.roberta.encoder.layer.10.attention.output.dense.bias', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.intermediate.dense.weight', 'bert.roberta.encoder.layer.10.intermediate.dense.bias', 'bert.roberta.encoder.layer.10.output.dense.weight', 'bert.roberta.encoder.layer.10.output.dense.bias', 'bert.roberta.encoder.layer.10.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.attention.self.query.weight', 'bert.roberta.encoder.layer.11.attention.self.query.bias', 'bert.roberta.encoder.layer.11.attention.self.key.weight', 'bert.roberta.encoder.layer.11.attention.self.key.bias', 'bert.roberta.encoder.layer.11.attention.self.value.weight', 'bert.roberta.encoder.layer.11.attention.self.value.bias', 'bert.roberta.encoder.layer.11.attention.output.dense.weight', 'bert.roberta.encoder.layer.11.attention.output.dense.bias', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.intermediate.dense.weight', 'bert.roberta.encoder.layer.11.intermediate.dense.bias', 'bert.roberta.encoder.layer.11.output.dense.weight', 'bert.roberta.encoder.layer.11.output.dense.bias', 'bert.roberta.encoder.layer.11.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.output.LayerNorm.bias', 'bert.lm_head.bias', 'bert.lm_head.dense.weight', 'bert.lm_head.dense.bias', 'bert.lm_head.layer_norm.weight', 'bert.lm_head.layer_norm.bias', 'bert.lm_head.decoder.weight', 'bert.lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
2024-10-31 03:19:16 - base_task.py[line:85] - WARNING: Some weights of the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin were not used when initializing XLMRobertaForMaskedLM: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias']
- This IS expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2024-10-31 03:19:16 - base_task.py[line:96] - WARNING: Some weights of XLMRobertaForMaskedLM were not initialized from the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin and are newly initialized: ['bert.roberta.embeddings.position_ids', 'bert.roberta.embeddings.word_embeddings.weight', 'bert.roberta.embeddings.position_embeddings.weight', 'bert.roberta.embeddings.token_type_embeddings.weight', 'bert.roberta.embeddings.LayerNorm.weight', 'bert.roberta.embeddings.LayerNorm.bias', 'bert.roberta.encoder.layer.0.attention.self.query.weight', 'bert.roberta.encoder.layer.0.attention.self.query.bias', 'bert.roberta.encoder.layer.0.attention.self.key.weight', 'bert.roberta.encoder.layer.0.attention.self.key.bias', 'bert.roberta.encoder.layer.0.attention.self.value.weight', 'bert.roberta.encoder.layer.0.attention.self.value.bias', 'bert.roberta.encoder.layer.0.attention.output.dense.weight', 'bert.roberta.encoder.layer.0.attention.output.dense.bias', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.0.intermediate.dense.weight', 'bert.roberta.encoder.layer.0.intermediate.dense.bias', 'bert.roberta.encoder.layer.0.output.dense.weight', 'bert.roberta.encoder.layer.0.output.dense.bias', 'bert.roberta.encoder.layer.0.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.attention.self.query.weight', 'bert.roberta.encoder.layer.1.attention.self.query.bias', 'bert.roberta.encoder.layer.1.attention.self.key.weight', 'bert.roberta.encoder.layer.1.attention.self.key.bias', 'bert.roberta.encoder.layer.1.attention.self.value.weight', 'bert.roberta.encoder.layer.1.attention.self.value.bias', 'bert.roberta.encoder.layer.1.attention.output.dense.weight', 'bert.roberta.encoder.layer.1.attention.output.dense.bias', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.intermediate.dense.weight', 'bert.roberta.encoder.layer.1.intermediate.dense.bias', 'bert.roberta.encoder.layer.1.output.dense.weight', 'bert.roberta.encoder.layer.1.output.dense.bias', 'bert.roberta.encoder.layer.1.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.attention.self.query.weight', 'bert.roberta.encoder.layer.2.attention.self.query.bias', 'bert.roberta.encoder.layer.2.attention.self.key.weight', 'bert.roberta.encoder.layer.2.attention.self.key.bias', 'bert.roberta.encoder.layer.2.attention.self.value.weight', 'bert.roberta.encoder.layer.2.attention.self.value.bias', 'bert.roberta.encoder.layer.2.attention.output.dense.weight', 'bert.roberta.encoder.layer.2.attention.output.dense.bias', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.intermediate.dense.weight', 'bert.roberta.encoder.layer.2.intermediate.dense.bias', 'bert.roberta.encoder.layer.2.output.dense.weight', 'bert.roberta.encoder.layer.2.output.dense.bias', 'bert.roberta.encoder.layer.2.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.attention.self.query.weight', 'bert.roberta.encoder.layer.3.attention.self.query.bias', 'bert.roberta.encoder.layer.3.attention.self.key.weight', 'bert.roberta.encoder.layer.3.attention.self.key.bias', 'bert.roberta.encoder.layer.3.attention.self.value.weight', 'bert.roberta.encoder.layer.3.attention.self.value.bias', 'bert.roberta.encoder.layer.3.attention.output.dense.weight', 'bert.roberta.encoder.layer.3.attention.output.dense.bias', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.intermediate.dense.weight', 'bert.roberta.encoder.layer.3.intermediate.dense.bias', 'bert.roberta.encoder.layer.3.output.dense.weight', 'bert.roberta.encoder.layer.3.output.dense.bias', 'bert.roberta.encoder.layer.3.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.attention.self.query.weight', 'bert.roberta.encoder.layer.4.attention.self.query.bias', 'bert.roberta.encoder.layer.4.attention.self.key.weight', 'bert.roberta.encoder.layer.4.attention.self.key.bias', 'bert.roberta.encoder.layer.4.attention.self.value.weight', 'bert.roberta.encoder.layer.4.attention.self.value.bias', 'bert.roberta.encoder.layer.4.attention.output.dense.weight', 'bert.roberta.encoder.layer.4.attention.output.dense.bias', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.intermediate.dense.weight', 'bert.roberta.encoder.layer.4.intermediate.dense.bias', 'bert.roberta.encoder.layer.4.output.dense.weight', 'bert.roberta.encoder.layer.4.output.dense.bias', 'bert.roberta.encoder.layer.4.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.attention.self.query.weight', 'bert.roberta.encoder.layer.5.attention.self.query.bias', 'bert.roberta.encoder.layer.5.attention.self.key.weight', 'bert.roberta.encoder.layer.5.attention.self.key.bias', 'bert.roberta.encoder.layer.5.attention.self.value.weight', 'bert.roberta.encoder.layer.5.attention.self.value.bias', 'bert.roberta.encoder.layer.5.attention.output.dense.weight', 'bert.roberta.encoder.layer.5.attention.output.dense.bias', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.intermediate.dense.weight', 'bert.roberta.encoder.layer.5.intermediate.dense.bias', 'bert.roberta.encoder.layer.5.output.dense.weight', 'bert.roberta.encoder.layer.5.output.dense.bias', 'bert.roberta.encoder.layer.5.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.attention.self.query.weight', 'bert.roberta.encoder.layer.6.attention.self.query.bias', 'bert.roberta.encoder.layer.6.attention.self.key.weight', 'bert.roberta.encoder.layer.6.attention.self.key.bias', 'bert.roberta.encoder.layer.6.attention.self.value.weight', 'bert.roberta.encoder.layer.6.attention.self.value.bias', 'bert.roberta.encoder.layer.6.attention.output.dense.weight', 'bert.roberta.encoder.layer.6.attention.output.dense.bias', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.intermediate.dense.weight', 'bert.roberta.encoder.layer.6.intermediate.dense.bias', 'bert.roberta.encoder.layer.6.output.dense.weight', 'bert.roberta.encoder.layer.6.output.dense.bias', 'bert.roberta.encoder.layer.6.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.attention.self.query.weight', 'bert.roberta.encoder.layer.7.attention.self.query.bias', 'bert.roberta.encoder.layer.7.attention.self.key.weight', 'bert.roberta.encoder.layer.7.attention.self.key.bias', 'bert.roberta.encoder.layer.7.attention.self.value.weight', 'bert.roberta.encoder.layer.7.attention.self.value.bias', 'bert.roberta.encoder.layer.7.attention.output.dense.weight', 'bert.roberta.encoder.layer.7.attention.output.dense.bias', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.intermediate.dense.weight', 'bert.roberta.encoder.layer.7.intermediate.dense.bias', 'bert.roberta.encoder.layer.7.output.dense.weight', 'bert.roberta.encoder.layer.7.output.dense.bias', 'bert.roberta.encoder.layer.7.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.attention.self.query.weight', 'bert.roberta.encoder.layer.8.attention.self.query.bias', 'bert.roberta.encoder.layer.8.attention.self.key.weight', 'bert.roberta.encoder.layer.8.attention.self.key.bias', 'bert.roberta.encoder.layer.8.attention.self.value.weight', 'bert.roberta.encoder.layer.8.attention.self.value.bias', 'bert.roberta.encoder.layer.8.attention.output.dense.weight', 'bert.roberta.encoder.layer.8.attention.output.dense.bias', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.intermediate.dense.weight', 'bert.roberta.encoder.layer.8.intermediate.dense.bias', 'bert.roberta.encoder.layer.8.output.dense.weight', 'bert.roberta.encoder.layer.8.output.dense.bias', 'bert.roberta.encoder.layer.8.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.attention.self.query.weight', 'bert.roberta.encoder.layer.9.attention.self.query.bias', 'bert.roberta.encoder.layer.9.attention.self.key.weight', 'bert.roberta.encoder.layer.9.attention.self.key.bias', 'bert.roberta.encoder.layer.9.attention.self.value.weight', 'bert.roberta.encoder.layer.9.attention.self.value.bias', 'bert.roberta.encoder.layer.9.attention.output.dense.weight', 'bert.roberta.encoder.layer.9.attention.output.dense.bias', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.intermediate.dense.weight', 'bert.roberta.encoder.layer.9.intermediate.dense.bias', 'bert.roberta.encoder.layer.9.output.dense.weight', 'bert.roberta.encoder.layer.9.output.dense.bias', 'bert.roberta.encoder.layer.9.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.attention.self.query.weight', 'bert.roberta.encoder.layer.10.attention.self.query.bias', 'bert.roberta.encoder.layer.10.attention.self.key.weight', 'bert.roberta.encoder.layer.10.attention.self.key.bias', 'bert.roberta.encoder.layer.10.attention.self.value.weight', 'bert.roberta.encoder.layer.10.attention.self.value.bias', 'bert.roberta.encoder.layer.10.attention.output.dense.weight', 'bert.roberta.encoder.layer.10.attention.output.dense.bias', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.intermediate.dense.weight', 'bert.roberta.encoder.layer.10.intermediate.dense.bias', 'bert.roberta.encoder.layer.10.output.dense.weight', 'bert.roberta.encoder.layer.10.output.dense.bias', 'bert.roberta.encoder.layer.10.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.attention.self.query.weight', 'bert.roberta.encoder.layer.11.attention.self.query.bias', 'bert.roberta.encoder.layer.11.attention.self.key.weight', 'bert.roberta.encoder.layer.11.attention.self.key.bias', 'bert.roberta.encoder.layer.11.attention.self.value.weight', 'bert.roberta.encoder.layer.11.attention.self.value.bias', 'bert.roberta.encoder.layer.11.attention.output.dense.weight', 'bert.roberta.encoder.layer.11.attention.output.dense.bias', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.intermediate.dense.weight', 'bert.roberta.encoder.layer.11.intermediate.dense.bias', 'bert.roberta.encoder.layer.11.output.dense.weight', 'bert.roberta.encoder.layer.11.output.dense.bias', 'bert.roberta.encoder.layer.11.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.output.LayerNorm.bias', 'bert.lm_head.bias', 'bert.lm_head.dense.weight', 'bert.lm_head.dense.bias', 'bert.lm_head.layer_norm.weight', 'bert.lm_head.layer_norm.bias', 'bert.lm_head.decoder.weight', 'bert.lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
2024-10-31 03:19:16 - base_task.py[line:85] - WARNING: Some weights of the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin were not used when initializing XLMRobertaForMaskedLM: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias']
- This IS expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2024-10-31 03:19:16 - base_task.py[line:96] - WARNING: Some weights of XLMRobertaForMaskedLM were not initialized from the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin and are newly initialized: ['bert.roberta.embeddings.position_ids', 'bert.roberta.embeddings.word_embeddings.weight', 'bert.roberta.embeddings.position_embeddings.weight', 'bert.roberta.embeddings.token_type_embeddings.weight', 'bert.roberta.embeddings.LayerNorm.weight', 'bert.roberta.embeddings.LayerNorm.bias', 'bert.roberta.encoder.layer.0.attention.self.query.weight', 'bert.roberta.encoder.layer.0.attention.self.query.bias', 'bert.roberta.encoder.layer.0.attention.self.key.weight', 'bert.roberta.encoder.layer.0.attention.self.key.bias', 'bert.roberta.encoder.layer.0.attention.self.value.weight', 'bert.roberta.encoder.layer.0.attention.self.value.bias', 'bert.roberta.encoder.layer.0.attention.output.dense.weight', 'bert.roberta.encoder.layer.0.attention.output.dense.bias', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.0.intermediate.dense.weight', 'bert.roberta.encoder.layer.0.intermediate.dense.bias', 'bert.roberta.encoder.layer.0.output.dense.weight', 'bert.roberta.encoder.layer.0.output.dense.bias', 'bert.roberta.encoder.layer.0.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.attention.self.query.weight', 'bert.roberta.encoder.layer.1.attention.self.query.bias', 'bert.roberta.encoder.layer.1.attention.self.key.weight', 'bert.roberta.encoder.layer.1.attention.self.key.bias', 'bert.roberta.encoder.layer.1.attention.self.value.weight', 'bert.roberta.encoder.layer.1.attention.self.value.bias', 'bert.roberta.encoder.layer.1.attention.output.dense.weight', 'bert.roberta.encoder.layer.1.attention.output.dense.bias', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.intermediate.dense.weight', 'bert.roberta.encoder.layer.1.intermediate.dense.bias', 'bert.roberta.encoder.layer.1.output.dense.weight', 'bert.roberta.encoder.layer.1.output.dense.bias', 'bert.roberta.encoder.layer.1.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.attention.self.query.weight', 'bert.roberta.encoder.layer.2.attention.self.query.bias', 'bert.roberta.encoder.layer.2.attention.self.key.weight', 'bert.roberta.encoder.layer.2.attention.self.key.bias', 'bert.roberta.encoder.layer.2.attention.self.value.weight', 'bert.roberta.encoder.layer.2.attention.self.value.bias', 'bert.roberta.encoder.layer.2.attention.output.dense.weight', 'bert.roberta.encoder.layer.2.attention.output.dense.bias', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.intermediate.dense.weight', 'bert.roberta.encoder.layer.2.intermediate.dense.bias', 'bert.roberta.encoder.layer.2.output.dense.weight', 'bert.roberta.encoder.layer.2.output.dense.bias', 'bert.roberta.encoder.layer.2.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.attention.self.query.weight', 'bert.roberta.encoder.layer.3.attention.self.query.bias', 'bert.roberta.encoder.layer.3.attention.self.key.weight', 'bert.roberta.encoder.layer.3.attention.self.key.bias', 'bert.roberta.encoder.layer.3.attention.self.value.weight', 'bert.roberta.encoder.layer.3.attention.self.value.bias', 'bert.roberta.encoder.layer.3.attention.output.dense.weight', 'bert.roberta.encoder.layer.3.attention.output.dense.bias', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.intermediate.dense.weight', 'bert.roberta.encoder.layer.3.intermediate.dense.bias', 'bert.roberta.encoder.layer.3.output.dense.weight', 'bert.roberta.encoder.layer.3.output.dense.bias', 'bert.roberta.encoder.layer.3.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.attention.self.query.weight', 'bert.roberta.encoder.layer.4.attention.self.query.bias', 'bert.roberta.encoder.layer.4.attention.self.key.weight', 'bert.roberta.encoder.layer.4.attention.self.key.bias', 'bert.roberta.encoder.layer.4.attention.self.value.weight', 'bert.roberta.encoder.layer.4.attention.self.value.bias', 'bert.roberta.encoder.layer.4.attention.output.dense.weight', 'bert.roberta.encoder.layer.4.attention.output.dense.bias', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.intermediate.dense.weight', 'bert.roberta.encoder.layer.4.intermediate.dense.bias', 'bert.roberta.encoder.layer.4.output.dense.weight', 'bert.roberta.encoder.layer.4.output.dense.bias', 'bert.roberta.encoder.layer.4.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.attention.self.query.weight', 'bert.roberta.encoder.layer.5.attention.self.query.bias', 'bert.roberta.encoder.layer.5.attention.self.key.weight', 'bert.roberta.encoder.layer.5.attention.self.key.bias', 'bert.roberta.encoder.layer.5.attention.self.value.weight', 'bert.roberta.encoder.layer.5.attention.self.value.bias', 'bert.roberta.encoder.layer.5.attention.output.dense.weight', 'bert.roberta.encoder.layer.5.attention.output.dense.bias', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.intermediate.dense.weight', 'bert.roberta.encoder.layer.5.intermediate.dense.bias', 'bert.roberta.encoder.layer.5.output.dense.weight', 'bert.roberta.encoder.layer.5.output.dense.bias', 'bert.roberta.encoder.layer.5.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.attention.self.query.weight', 'bert.roberta.encoder.layer.6.attention.self.query.bias', 'bert.roberta.encoder.layer.6.attention.self.key.weight', 'bert.roberta.encoder.layer.6.attention.self.key.bias', 'bert.roberta.encoder.layer.6.attention.self.value.weight', 'bert.roberta.encoder.layer.6.attention.self.value.bias', 'bert.roberta.encoder.layer.6.attention.output.dense.weight', 'bert.roberta.encoder.layer.6.attention.output.dense.bias', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.intermediate.dense.weight', 'bert.roberta.encoder.layer.6.intermediate.dense.bias', 'bert.roberta.encoder.layer.6.output.dense.weight', 'bert.roberta.encoder.layer.6.output.dense.bias', 'bert.roberta.encoder.layer.6.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.attention.self.query.weight', 'bert.roberta.encoder.layer.7.attention.self.query.bias', 'bert.roberta.encoder.layer.7.attention.self.key.weight', 'bert.roberta.encoder.layer.7.attention.self.key.bias', 'bert.roberta.encoder.layer.7.attention.self.value.weight', 'bert.roberta.encoder.layer.7.attention.self.value.bias', 'bert.roberta.encoder.layer.7.attention.output.dense.weight', 'bert.roberta.encoder.layer.7.attention.output.dense.bias', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.intermediate.dense.weight', 'bert.roberta.encoder.layer.7.intermediate.dense.bias', 'bert.roberta.encoder.layer.7.output.dense.weight', 'bert.roberta.encoder.layer.7.output.dense.bias', 'bert.roberta.encoder.layer.7.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.attention.self.query.weight', 'bert.roberta.encoder.layer.8.attention.self.query.bias', 'bert.roberta.encoder.layer.8.attention.self.key.weight', 'bert.roberta.encoder.layer.8.attention.self.key.bias', 'bert.roberta.encoder.layer.8.attention.self.value.weight', 'bert.roberta.encoder.layer.8.attention.self.value.bias', 'bert.roberta.encoder.layer.8.attention.output.dense.weight', 'bert.roberta.encoder.layer.8.attention.output.dense.bias', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.intermediate.dense.weight', 'bert.roberta.encoder.layer.8.intermediate.dense.bias', 'bert.roberta.encoder.layer.8.output.dense.weight', 'bert.roberta.encoder.layer.8.output.dense.bias', 'bert.roberta.encoder.layer.8.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.attention.self.query.weight', 'bert.roberta.encoder.layer.9.attention.self.query.bias', 'bert.roberta.encoder.layer.9.attention.self.key.weight', 'bert.roberta.encoder.layer.9.attention.self.key.bias', 'bert.roberta.encoder.layer.9.attention.self.value.weight', 'bert.roberta.encoder.layer.9.attention.self.value.bias', 'bert.roberta.encoder.layer.9.attention.output.dense.weight', 'bert.roberta.encoder.layer.9.attention.output.dense.bias', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.intermediate.dense.weight', 'bert.roberta.encoder.layer.9.intermediate.dense.bias', 'bert.roberta.encoder.layer.9.output.dense.weight', 'bert.roberta.encoder.layer.9.output.dense.bias', 'bert.roberta.encoder.layer.9.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.attention.self.query.weight', 'bert.roberta.encoder.layer.10.attention.self.query.bias', 'bert.roberta.encoder.layer.10.attention.self.key.weight', 'bert.roberta.encoder.layer.10.attention.self.key.bias', 'bert.roberta.encoder.layer.10.attention.self.value.weight', 'bert.roberta.encoder.layer.10.attention.self.value.bias', 'bert.roberta.encoder.layer.10.attention.output.dense.weight', 'bert.roberta.encoder.layer.10.attention.output.dense.bias', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.intermediate.dense.weight', 'bert.roberta.encoder.layer.10.intermediate.dense.bias', 'bert.roberta.encoder.layer.10.output.dense.weight', 'bert.roberta.encoder.layer.10.output.dense.bias', 'bert.roberta.encoder.layer.10.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.attention.self.query.weight', 'bert.roberta.encoder.layer.11.attention.self.query.bias', 'bert.roberta.encoder.layer.11.attention.self.key.weight', 'bert.roberta.encoder.layer.11.attention.self.key.bias', 'bert.roberta.encoder.layer.11.attention.self.value.weight', 'bert.roberta.encoder.layer.11.attention.self.value.bias', 'bert.roberta.encoder.layer.11.attention.output.dense.weight', 'bert.roberta.encoder.layer.11.attention.output.dense.bias', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.intermediate.dense.weight', 'bert.roberta.encoder.layer.11.intermediate.dense.bias', 'bert.roberta.encoder.layer.11.output.dense.weight', 'bert.roberta.encoder.layer.11.output.dense.bias', 'bert.roberta.encoder.layer.11.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.output.LayerNorm.bias', 'bert.lm_head.bias', 'bert.lm_head.dense.weight', 'bert.lm_head.dense.bias', 'bert.lm_head.layer_norm.weight', 'bert.lm_head.layer_norm.bias', 'bert.lm_head.decoder.weight', 'bert.lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
2024-10-31 03:19:16 - base_task.py[line:85] - WARNING: Some weights of the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin were not used when initializing XLMRobertaForMaskedLM: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias']
- This IS expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2024-10-31 03:19:16 - base_task.py[line:96] - WARNING: Some weights of XLMRobertaForMaskedLM were not initialized from the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin and are newly initialized: ['bert.roberta.embeddings.position_ids', 'bert.roberta.embeddings.word_embeddings.weight', 'bert.roberta.embeddings.position_embeddings.weight', 'bert.roberta.embeddings.token_type_embeddings.weight', 'bert.roberta.embeddings.LayerNorm.weight', 'bert.roberta.embeddings.LayerNorm.bias', 'bert.roberta.encoder.layer.0.attention.self.query.weight', 'bert.roberta.encoder.layer.0.attention.self.query.bias', 'bert.roberta.encoder.layer.0.attention.self.key.weight', 'bert.roberta.encoder.layer.0.attention.self.key.bias', 'bert.roberta.encoder.layer.0.attention.self.value.weight', 'bert.roberta.encoder.layer.0.attention.self.value.bias', 'bert.roberta.encoder.layer.0.attention.output.dense.weight', 'bert.roberta.encoder.layer.0.attention.output.dense.bias', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.0.intermediate.dense.weight', 'bert.roberta.encoder.layer.0.intermediate.dense.bias', 'bert.roberta.encoder.layer.0.output.dense.weight', 'bert.roberta.encoder.layer.0.output.dense.bias', 'bert.roberta.encoder.layer.0.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.attention.self.query.weight', 'bert.roberta.encoder.layer.1.attention.self.query.bias', 'bert.roberta.encoder.layer.1.attention.self.key.weight', 'bert.roberta.encoder.layer.1.attention.self.key.bias', 'bert.roberta.encoder.layer.1.attention.self.value.weight', 'bert.roberta.encoder.layer.1.attention.self.value.bias', 'bert.roberta.encoder.layer.1.attention.output.dense.weight', 'bert.roberta.encoder.layer.1.attention.output.dense.bias', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.intermediate.dense.weight', 'bert.roberta.encoder.layer.1.intermediate.dense.bias', 'bert.roberta.encoder.layer.1.output.dense.weight', 'bert.roberta.encoder.layer.1.output.dense.bias', 'bert.roberta.encoder.layer.1.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.attention.self.query.weight', 'bert.roberta.encoder.layer.2.attention.self.query.bias', 'bert.roberta.encoder.layer.2.attention.self.key.weight', 'bert.roberta.encoder.layer.2.attention.self.key.bias', 'bert.roberta.encoder.layer.2.attention.self.value.weight', 'bert.roberta.encoder.layer.2.attention.self.value.bias', 'bert.roberta.encoder.layer.2.attention.output.dense.weight', 'bert.roberta.encoder.layer.2.attention.output.dense.bias', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.intermediate.dense.weight', 'bert.roberta.encoder.layer.2.intermediate.dense.bias', 'bert.roberta.encoder.layer.2.output.dense.weight', 'bert.roberta.encoder.layer.2.output.dense.bias', 'bert.roberta.encoder.layer.2.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.attention.self.query.weight', 'bert.roberta.encoder.layer.3.attention.self.query.bias', 'bert.roberta.encoder.layer.3.attention.self.key.weight', 'bert.roberta.encoder.layer.3.attention.self.key.bias', 'bert.roberta.encoder.layer.3.attention.self.value.weight', 'bert.roberta.encoder.layer.3.attention.self.value.bias', 'bert.roberta.encoder.layer.3.attention.output.dense.weight', 'bert.roberta.encoder.layer.3.attention.output.dense.bias', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.intermediate.dense.weight', 'bert.roberta.encoder.layer.3.intermediate.dense.bias', 'bert.roberta.encoder.layer.3.output.dense.weight', 'bert.roberta.encoder.layer.3.output.dense.bias', 'bert.roberta.encoder.layer.3.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.attention.self.query.weight', 'bert.roberta.encoder.layer.4.attention.self.query.bias', 'bert.roberta.encoder.layer.4.attention.self.key.weight', 'bert.roberta.encoder.layer.4.attention.self.key.bias', 'bert.roberta.encoder.layer.4.attention.self.value.weight', 'bert.roberta.encoder.layer.4.attention.self.value.bias', 'bert.roberta.encoder.layer.4.attention.output.dense.weight', 'bert.roberta.encoder.layer.4.attention.output.dense.bias', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.intermediate.dense.weight', 'bert.roberta.encoder.layer.4.intermediate.dense.bias', 'bert.roberta.encoder.layer.4.output.dense.weight', 'bert.roberta.encoder.layer.4.output.dense.bias', 'bert.roberta.encoder.layer.4.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.attention.self.query.weight', 'bert.roberta.encoder.layer.5.attention.self.query.bias', 'bert.roberta.encoder.layer.5.attention.self.key.weight', 'bert.roberta.encoder.layer.5.attention.self.key.bias', 'bert.roberta.encoder.layer.5.attention.self.value.weight', 'bert.roberta.encoder.layer.5.attention.self.value.bias', 'bert.roberta.encoder.layer.5.attention.output.dense.weight', 'bert.roberta.encoder.layer.5.attention.output.dense.bias', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.intermediate.dense.weight', 'bert.roberta.encoder.layer.5.intermediate.dense.bias', 'bert.roberta.encoder.layer.5.output.dense.weight', 'bert.roberta.encoder.layer.5.output.dense.bias', 'bert.roberta.encoder.layer.5.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.attention.self.query.weight', 'bert.roberta.encoder.layer.6.attention.self.query.bias', 'bert.roberta.encoder.layer.6.attention.self.key.weight', 'bert.roberta.encoder.layer.6.attention.self.key.bias', 'bert.roberta.encoder.layer.6.attention.self.value.weight', 'bert.roberta.encoder.layer.6.attention.self.value.bias', 'bert.roberta.encoder.layer.6.attention.output.dense.weight', 'bert.roberta.encoder.layer.6.attention.output.dense.bias', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.intermediate.dense.weight', 'bert.roberta.encoder.layer.6.intermediate.dense.bias', 'bert.roberta.encoder.layer.6.output.dense.weight', 'bert.roberta.encoder.layer.6.output.dense.bias', 'bert.roberta.encoder.layer.6.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.attention.self.query.weight', 'bert.roberta.encoder.layer.7.attention.self.query.bias', 'bert.roberta.encoder.layer.7.attention.self.key.weight', 'bert.roberta.encoder.layer.7.attention.self.key.bias', 'bert.roberta.encoder.layer.7.attention.self.value.weight', 'bert.roberta.encoder.layer.7.attention.self.value.bias', 'bert.roberta.encoder.layer.7.attention.output.dense.weight', 'bert.roberta.encoder.layer.7.attention.output.dense.bias', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.intermediate.dense.weight', 'bert.roberta.encoder.layer.7.intermediate.dense.bias', 'bert.roberta.encoder.layer.7.output.dense.weight', 'bert.roberta.encoder.layer.7.output.dense.bias', 'bert.roberta.encoder.layer.7.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.attention.self.query.weight', 'bert.roberta.encoder.layer.8.attention.self.query.bias', 'bert.roberta.encoder.layer.8.attention.self.key.weight', 'bert.roberta.encoder.layer.8.attention.self.key.bias', 'bert.roberta.encoder.layer.8.attention.self.value.weight', 'bert.roberta.encoder.layer.8.attention.self.value.bias', 'bert.roberta.encoder.layer.8.attention.output.dense.weight', 'bert.roberta.encoder.layer.8.attention.output.dense.bias', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.intermediate.dense.weight', 'bert.roberta.encoder.layer.8.intermediate.dense.bias', 'bert.roberta.encoder.layer.8.output.dense.weight', 'bert.roberta.encoder.layer.8.output.dense.bias', 'bert.roberta.encoder.layer.8.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.attention.self.query.weight', 'bert.roberta.encoder.layer.9.attention.self.query.bias', 'bert.roberta.encoder.layer.9.attention.self.key.weight', 'bert.roberta.encoder.layer.9.attention.self.key.bias', 'bert.roberta.encoder.layer.9.attention.self.value.weight', 'bert.roberta.encoder.layer.9.attention.self.value.bias', 'bert.roberta.encoder.layer.9.attention.output.dense.weight', 'bert.roberta.encoder.layer.9.attention.output.dense.bias', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.intermediate.dense.weight', 'bert.roberta.encoder.layer.9.intermediate.dense.bias', 'bert.roberta.encoder.layer.9.output.dense.weight', 'bert.roberta.encoder.layer.9.output.dense.bias', 'bert.roberta.encoder.layer.9.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.attention.self.query.weight', 'bert.roberta.encoder.layer.10.attention.self.query.bias', 'bert.roberta.encoder.layer.10.attention.self.key.weight', 'bert.roberta.encoder.layer.10.attention.self.key.bias', 'bert.roberta.encoder.layer.10.attention.self.value.weight', 'bert.roberta.encoder.layer.10.attention.self.value.bias', 'bert.roberta.encoder.layer.10.attention.output.dense.weight', 'bert.roberta.encoder.layer.10.attention.output.dense.bias', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.intermediate.dense.weight', 'bert.roberta.encoder.layer.10.intermediate.dense.bias', 'bert.roberta.encoder.layer.10.output.dense.weight', 'bert.roberta.encoder.layer.10.output.dense.bias', 'bert.roberta.encoder.layer.10.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.attention.self.query.weight', 'bert.roberta.encoder.layer.11.attention.self.query.bias', 'bert.roberta.encoder.layer.11.attention.self.key.weight', 'bert.roberta.encoder.layer.11.attention.self.key.bias', 'bert.roberta.encoder.layer.11.attention.self.value.weight', 'bert.roberta.encoder.layer.11.attention.self.value.bias', 'bert.roberta.encoder.layer.11.attention.output.dense.weight', 'bert.roberta.encoder.layer.11.attention.output.dense.bias', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.intermediate.dense.weight', 'bert.roberta.encoder.layer.11.intermediate.dense.bias', 'bert.roberta.encoder.layer.11.output.dense.weight', 'bert.roberta.encoder.layer.11.output.dense.bias', 'bert.roberta.encoder.layer.11.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.output.LayerNorm.bias', 'bert.lm_head.bias', 'bert.lm_head.dense.weight', 'bert.lm_head.dense.bias', 'bert.lm_head.layer_norm.weight', 'bert.lm_head.layer_norm.bias', 'bert.lm_head.decoder.weight', 'bert.lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
2024-10-31 03:19:16 - base_task.py[line:85] - WARNING: Some weights of the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin were not used when initializing XLMRobertaForMaskedLM: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias']
- This IS expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2024-10-31 03:19:16 - base_task.py[line:96] - WARNING: Some weights of XLMRobertaForMaskedLM were not initialized from the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin and are newly initialized: ['bert.roberta.embeddings.position_ids', 'bert.roberta.embeddings.word_embeddings.weight', 'bert.roberta.embeddings.position_embeddings.weight', 'bert.roberta.embeddings.token_type_embeddings.weight', 'bert.roberta.embeddings.LayerNorm.weight', 'bert.roberta.embeddings.LayerNorm.bias', 'bert.roberta.encoder.layer.0.attention.self.query.weight', 'bert.roberta.encoder.layer.0.attention.self.query.bias', 'bert.roberta.encoder.layer.0.attention.self.key.weight', 'bert.roberta.encoder.layer.0.attention.self.key.bias', 'bert.roberta.encoder.layer.0.attention.self.value.weight', 'bert.roberta.encoder.layer.0.attention.self.value.bias', 'bert.roberta.encoder.layer.0.attention.output.dense.weight', 'bert.roberta.encoder.layer.0.attention.output.dense.bias', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.0.intermediate.dense.weight', 'bert.roberta.encoder.layer.0.intermediate.dense.bias', 'bert.roberta.encoder.layer.0.output.dense.weight', 'bert.roberta.encoder.layer.0.output.dense.bias', 'bert.roberta.encoder.layer.0.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.attention.self.query.weight', 'bert.roberta.encoder.layer.1.attention.self.query.bias', 'bert.roberta.encoder.layer.1.attention.self.key.weight', 'bert.roberta.encoder.layer.1.attention.self.key.bias', 'bert.roberta.encoder.layer.1.attention.self.value.weight', 'bert.roberta.encoder.layer.1.attention.self.value.bias', 'bert.roberta.encoder.layer.1.attention.output.dense.weight', 'bert.roberta.encoder.layer.1.attention.output.dense.bias', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.intermediate.dense.weight', 'bert.roberta.encoder.layer.1.intermediate.dense.bias', 'bert.roberta.encoder.layer.1.output.dense.weight', 'bert.roberta.encoder.layer.1.output.dense.bias', 'bert.roberta.encoder.layer.1.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.attention.self.query.weight', 'bert.roberta.encoder.layer.2.attention.self.query.bias', 'bert.roberta.encoder.layer.2.attention.self.key.weight', 'bert.roberta.encoder.layer.2.attention.self.key.bias', 'bert.roberta.encoder.layer.2.attention.self.value.weight', 'bert.roberta.encoder.layer.2.attention.self.value.bias', 'bert.roberta.encoder.layer.2.attention.output.dense.weight', 'bert.roberta.encoder.layer.2.attention.output.dense.bias', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.intermediate.dense.weight', 'bert.roberta.encoder.layer.2.intermediate.dense.bias', 'bert.roberta.encoder.layer.2.output.dense.weight', 'bert.roberta.encoder.layer.2.output.dense.bias', 'bert.roberta.encoder.layer.2.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.attention.self.query.weight', 'bert.roberta.encoder.layer.3.attention.self.query.bias', 'bert.roberta.encoder.layer.3.attention.self.key.weight', 'bert.roberta.encoder.layer.3.attention.self.key.bias', 'bert.roberta.encoder.layer.3.attention.self.value.weight', 'bert.roberta.encoder.layer.3.attention.self.value.bias', 'bert.roberta.encoder.layer.3.attention.output.dense.weight', 'bert.roberta.encoder.layer.3.attention.output.dense.bias', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.intermediate.dense.weight', 'bert.roberta.encoder.layer.3.intermediate.dense.bias', 'bert.roberta.encoder.layer.3.output.dense.weight', 'bert.roberta.encoder.layer.3.output.dense.bias', 'bert.roberta.encoder.layer.3.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.attention.self.query.weight', 'bert.roberta.encoder.layer.4.attention.self.query.bias', 'bert.roberta.encoder.layer.4.attention.self.key.weight', 'bert.roberta.encoder.layer.4.attention.self.key.bias', 'bert.roberta.encoder.layer.4.attention.self.value.weight', 'bert.roberta.encoder.layer.4.attention.self.value.bias', 'bert.roberta.encoder.layer.4.attention.output.dense.weight', 'bert.roberta.encoder.layer.4.attention.output.dense.bias', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.intermediate.dense.weight', 'bert.roberta.encoder.layer.4.intermediate.dense.bias', 'bert.roberta.encoder.layer.4.output.dense.weight', 'bert.roberta.encoder.layer.4.output.dense.bias', 'bert.roberta.encoder.layer.4.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.attention.self.query.weight', 'bert.roberta.encoder.layer.5.attention.self.query.bias', 'bert.roberta.encoder.layer.5.attention.self.key.weight', 'bert.roberta.encoder.layer.5.attention.self.key.bias', 'bert.roberta.encoder.layer.5.attention.self.value.weight', 'bert.roberta.encoder.layer.5.attention.self.value.bias', 'bert.roberta.encoder.layer.5.attention.output.dense.weight', 'bert.roberta.encoder.layer.5.attention.output.dense.bias', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.intermediate.dense.weight', 'bert.roberta.encoder.layer.5.intermediate.dense.bias', 'bert.roberta.encoder.layer.5.output.dense.weight', 'bert.roberta.encoder.layer.5.output.dense.bias', 'bert.roberta.encoder.layer.5.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.attention.self.query.weight', 'bert.roberta.encoder.layer.6.attention.self.query.bias', 'bert.roberta.encoder.layer.6.attention.self.key.weight', 'bert.roberta.encoder.layer.6.attention.self.key.bias', 'bert.roberta.encoder.layer.6.attention.self.value.weight', 'bert.roberta.encoder.layer.6.attention.self.value.bias', 'bert.roberta.encoder.layer.6.attention.output.dense.weight', 'bert.roberta.encoder.layer.6.attention.output.dense.bias', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.intermediate.dense.weight', 'bert.roberta.encoder.layer.6.intermediate.dense.bias', 'bert.roberta.encoder.layer.6.output.dense.weight', 'bert.roberta.encoder.layer.6.output.dense.bias', 'bert.roberta.encoder.layer.6.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.attention.self.query.weight', 'bert.roberta.encoder.layer.7.attention.self.query.bias', 'bert.roberta.encoder.layer.7.attention.self.key.weight', 'bert.roberta.encoder.layer.7.attention.self.key.bias', 'bert.roberta.encoder.layer.7.attention.self.value.weight', 'bert.roberta.encoder.layer.7.attention.self.value.bias', 'bert.roberta.encoder.layer.7.attention.output.dense.weight', 'bert.roberta.encoder.layer.7.attention.output.dense.bias', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.intermediate.dense.weight', 'bert.roberta.encoder.layer.7.intermediate.dense.bias', 'bert.roberta.encoder.layer.7.output.dense.weight', 'bert.roberta.encoder.layer.7.output.dense.bias', 'bert.roberta.encoder.layer.7.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.attention.self.query.weight', 'bert.roberta.encoder.layer.8.attention.self.query.bias', 'bert.roberta.encoder.layer.8.attention.self.key.weight', 'bert.roberta.encoder.layer.8.attention.self.key.bias', 'bert.roberta.encoder.layer.8.attention.self.value.weight', 'bert.roberta.encoder.layer.8.attention.self.value.bias', 'bert.roberta.encoder.layer.8.attention.output.dense.weight', 'bert.roberta.encoder.layer.8.attention.output.dense.bias', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.intermediate.dense.weight', 'bert.roberta.encoder.layer.8.intermediate.dense.bias', 'bert.roberta.encoder.layer.8.output.dense.weight', 'bert.roberta.encoder.layer.8.output.dense.bias', 'bert.roberta.encoder.layer.8.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.attention.self.query.weight', 'bert.roberta.encoder.layer.9.attention.self.query.bias', 'bert.roberta.encoder.layer.9.attention.self.key.weight', 'bert.roberta.encoder.layer.9.attention.self.key.bias', 'bert.roberta.encoder.layer.9.attention.self.value.weight', 'bert.roberta.encoder.layer.9.attention.self.value.bias', 'bert.roberta.encoder.layer.9.attention.output.dense.weight', 'bert.roberta.encoder.layer.9.attention.output.dense.bias', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.intermediate.dense.weight', 'bert.roberta.encoder.layer.9.intermediate.dense.bias', 'bert.roberta.encoder.layer.9.output.dense.weight', 'bert.roberta.encoder.layer.9.output.dense.bias', 'bert.roberta.encoder.layer.9.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.attention.self.query.weight', 'bert.roberta.encoder.layer.10.attention.self.query.bias', 'bert.roberta.encoder.layer.10.attention.self.key.weight', 'bert.roberta.encoder.layer.10.attention.self.key.bias', 'bert.roberta.encoder.layer.10.attention.self.value.weight', 'bert.roberta.encoder.layer.10.attention.self.value.bias', 'bert.roberta.encoder.layer.10.attention.output.dense.weight', 'bert.roberta.encoder.layer.10.attention.output.dense.bias', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.intermediate.dense.weight', 'bert.roberta.encoder.layer.10.intermediate.dense.bias', 'bert.roberta.encoder.layer.10.output.dense.weight', 'bert.roberta.encoder.layer.10.output.dense.bias', 'bert.roberta.encoder.layer.10.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.attention.self.query.weight', 'bert.roberta.encoder.layer.11.attention.self.query.bias', 'bert.roberta.encoder.layer.11.attention.self.key.weight', 'bert.roberta.encoder.layer.11.attention.self.key.bias', 'bert.roberta.encoder.layer.11.attention.self.value.weight', 'bert.roberta.encoder.layer.11.attention.self.value.bias', 'bert.roberta.encoder.layer.11.attention.output.dense.weight', 'bert.roberta.encoder.layer.11.attention.output.dense.bias', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.intermediate.dense.weight', 'bert.roberta.encoder.layer.11.intermediate.dense.bias', 'bert.roberta.encoder.layer.11.output.dense.weight', 'bert.roberta.encoder.layer.11.output.dense.bias', 'bert.roberta.encoder.layer.11.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.output.LayerNorm.bias', 'bert.lm_head.bias', 'bert.lm_head.dense.weight', 'bert.lm_head.dense.bias', 'bert.lm_head.layer_norm.weight', 'bert.lm_head.layer_norm.bias', 'bert.lm_head.decoder.weight', 'bert.lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
2024-10-31 03:19:16 - base_task.py[line:85] - WARNING: Some weights of the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin were not used when initializing XLMRobertaForMaskedLM: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias']
- This IS expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing XLMRobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2024-10-31 03:19:16 - base_task.py[line:96] - WARNING: Some weights of XLMRobertaForMaskedLM were not initialized from the model checkpoint at ../../pretrained_weights/bert-base-uncased-pytorch_model.bin and are newly initialized: ['bert.roberta.embeddings.position_ids', 'bert.roberta.embeddings.word_embeddings.weight', 'bert.roberta.embeddings.position_embeddings.weight', 'bert.roberta.embeddings.token_type_embeddings.weight', 'bert.roberta.embeddings.LayerNorm.weight', 'bert.roberta.embeddings.LayerNorm.bias', 'bert.roberta.encoder.layer.0.attention.self.query.weight', 'bert.roberta.encoder.layer.0.attention.self.query.bias', 'bert.roberta.encoder.layer.0.attention.self.key.weight', 'bert.roberta.encoder.layer.0.attention.self.key.bias', 'bert.roberta.encoder.layer.0.attention.self.value.weight', 'bert.roberta.encoder.layer.0.attention.self.value.bias', 'bert.roberta.encoder.layer.0.attention.output.dense.weight', 'bert.roberta.encoder.layer.0.attention.output.dense.bias', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.0.intermediate.dense.weight', 'bert.roberta.encoder.layer.0.intermediate.dense.bias', 'bert.roberta.encoder.layer.0.output.dense.weight', 'bert.roberta.encoder.layer.0.output.dense.bias', 'bert.roberta.encoder.layer.0.output.LayerNorm.weight', 'bert.roberta.encoder.layer.0.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.attention.self.query.weight', 'bert.roberta.encoder.layer.1.attention.self.query.bias', 'bert.roberta.encoder.layer.1.attention.self.key.weight', 'bert.roberta.encoder.layer.1.attention.self.key.bias', 'bert.roberta.encoder.layer.1.attention.self.value.weight', 'bert.roberta.encoder.layer.1.attention.self.value.bias', 'bert.roberta.encoder.layer.1.attention.output.dense.weight', 'bert.roberta.encoder.layer.1.attention.output.dense.bias', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.1.intermediate.dense.weight', 'bert.roberta.encoder.layer.1.intermediate.dense.bias', 'bert.roberta.encoder.layer.1.output.dense.weight', 'bert.roberta.encoder.layer.1.output.dense.bias', 'bert.roberta.encoder.layer.1.output.LayerNorm.weight', 'bert.roberta.encoder.layer.1.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.attention.self.query.weight', 'bert.roberta.encoder.layer.2.attention.self.query.bias', 'bert.roberta.encoder.layer.2.attention.self.key.weight', 'bert.roberta.encoder.layer.2.attention.self.key.bias', 'bert.roberta.encoder.layer.2.attention.self.value.weight', 'bert.roberta.encoder.layer.2.attention.self.value.bias', 'bert.roberta.encoder.layer.2.attention.output.dense.weight', 'bert.roberta.encoder.layer.2.attention.output.dense.bias', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.2.intermediate.dense.weight', 'bert.roberta.encoder.layer.2.intermediate.dense.bias', 'bert.roberta.encoder.layer.2.output.dense.weight', 'bert.roberta.encoder.layer.2.output.dense.bias', 'bert.roberta.encoder.layer.2.output.LayerNorm.weight', 'bert.roberta.encoder.layer.2.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.attention.self.query.weight', 'bert.roberta.encoder.layer.3.attention.self.query.bias', 'bert.roberta.encoder.layer.3.attention.self.key.weight', 'bert.roberta.encoder.layer.3.attention.self.key.bias', 'bert.roberta.encoder.layer.3.attention.self.value.weight', 'bert.roberta.encoder.layer.3.attention.self.value.bias', 'bert.roberta.encoder.layer.3.attention.output.dense.weight', 'bert.roberta.encoder.layer.3.attention.output.dense.bias', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.3.intermediate.dense.weight', 'bert.roberta.encoder.layer.3.intermediate.dense.bias', 'bert.roberta.encoder.layer.3.output.dense.weight', 'bert.roberta.encoder.layer.3.output.dense.bias', 'bert.roberta.encoder.layer.3.output.LayerNorm.weight', 'bert.roberta.encoder.layer.3.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.attention.self.query.weight', 'bert.roberta.encoder.layer.4.attention.self.query.bias', 'bert.roberta.encoder.layer.4.attention.self.key.weight', 'bert.roberta.encoder.layer.4.attention.self.key.bias', 'bert.roberta.encoder.layer.4.attention.self.value.weight', 'bert.roberta.encoder.layer.4.attention.self.value.bias', 'bert.roberta.encoder.layer.4.attention.output.dense.weight', 'bert.roberta.encoder.layer.4.attention.output.dense.bias', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.4.intermediate.dense.weight', 'bert.roberta.encoder.layer.4.intermediate.dense.bias', 'bert.roberta.encoder.layer.4.output.dense.weight', 'bert.roberta.encoder.layer.4.output.dense.bias', 'bert.roberta.encoder.layer.4.output.LayerNorm.weight', 'bert.roberta.encoder.layer.4.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.attention.self.query.weight', 'bert.roberta.encoder.layer.5.attention.self.query.bias', 'bert.roberta.encoder.layer.5.attention.self.key.weight', 'bert.roberta.encoder.layer.5.attention.self.key.bias', 'bert.roberta.encoder.layer.5.attention.self.value.weight', 'bert.roberta.encoder.layer.5.attention.self.value.bias', 'bert.roberta.encoder.layer.5.attention.output.dense.weight', 'bert.roberta.encoder.layer.5.attention.output.dense.bias', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.5.intermediate.dense.weight', 'bert.roberta.encoder.layer.5.intermediate.dense.bias', 'bert.roberta.encoder.layer.5.output.dense.weight', 'bert.roberta.encoder.layer.5.output.dense.bias', 'bert.roberta.encoder.layer.5.output.LayerNorm.weight', 'bert.roberta.encoder.layer.5.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.attention.self.query.weight', 'bert.roberta.encoder.layer.6.attention.self.query.bias', 'bert.roberta.encoder.layer.6.attention.self.key.weight', 'bert.roberta.encoder.layer.6.attention.self.key.bias', 'bert.roberta.encoder.layer.6.attention.self.value.weight', 'bert.roberta.encoder.layer.6.attention.self.value.bias', 'bert.roberta.encoder.layer.6.attention.output.dense.weight', 'bert.roberta.encoder.layer.6.attention.output.dense.bias', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.6.intermediate.dense.weight', 'bert.roberta.encoder.layer.6.intermediate.dense.bias', 'bert.roberta.encoder.layer.6.output.dense.weight', 'bert.roberta.encoder.layer.6.output.dense.bias', 'bert.roberta.encoder.layer.6.output.LayerNorm.weight', 'bert.roberta.encoder.layer.6.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.attention.self.query.weight', 'bert.roberta.encoder.layer.7.attention.self.query.bias', 'bert.roberta.encoder.layer.7.attention.self.key.weight', 'bert.roberta.encoder.layer.7.attention.self.key.bias', 'bert.roberta.encoder.layer.7.attention.self.value.weight', 'bert.roberta.encoder.layer.7.attention.self.value.bias', 'bert.roberta.encoder.layer.7.attention.output.dense.weight', 'bert.roberta.encoder.layer.7.attention.output.dense.bias', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.7.intermediate.dense.weight', 'bert.roberta.encoder.layer.7.intermediate.dense.bias', 'bert.roberta.encoder.layer.7.output.dense.weight', 'bert.roberta.encoder.layer.7.output.dense.bias', 'bert.roberta.encoder.layer.7.output.LayerNorm.weight', 'bert.roberta.encoder.layer.7.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.attention.self.query.weight', 'bert.roberta.encoder.layer.8.attention.self.query.bias', 'bert.roberta.encoder.layer.8.attention.self.key.weight', 'bert.roberta.encoder.layer.8.attention.self.key.bias', 'bert.roberta.encoder.layer.8.attention.self.value.weight', 'bert.roberta.encoder.layer.8.attention.self.value.bias', 'bert.roberta.encoder.layer.8.attention.output.dense.weight', 'bert.roberta.encoder.layer.8.attention.output.dense.bias', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.8.intermediate.dense.weight', 'bert.roberta.encoder.layer.8.intermediate.dense.bias', 'bert.roberta.encoder.layer.8.output.dense.weight', 'bert.roberta.encoder.layer.8.output.dense.bias', 'bert.roberta.encoder.layer.8.output.LayerNorm.weight', 'bert.roberta.encoder.layer.8.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.attention.self.query.weight', 'bert.roberta.encoder.layer.9.attention.self.query.bias', 'bert.roberta.encoder.layer.9.attention.self.key.weight', 'bert.roberta.encoder.layer.9.attention.self.key.bias', 'bert.roberta.encoder.layer.9.attention.self.value.weight', 'bert.roberta.encoder.layer.9.attention.self.value.bias', 'bert.roberta.encoder.layer.9.attention.output.dense.weight', 'bert.roberta.encoder.layer.9.attention.output.dense.bias', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.9.intermediate.dense.weight', 'bert.roberta.encoder.layer.9.intermediate.dense.bias', 'bert.roberta.encoder.layer.9.output.dense.weight', 'bert.roberta.encoder.layer.9.output.dense.bias', 'bert.roberta.encoder.layer.9.output.LayerNorm.weight', 'bert.roberta.encoder.layer.9.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.attention.self.query.weight', 'bert.roberta.encoder.layer.10.attention.self.query.bias', 'bert.roberta.encoder.layer.10.attention.self.key.weight', 'bert.roberta.encoder.layer.10.attention.self.key.bias', 'bert.roberta.encoder.layer.10.attention.self.value.weight', 'bert.roberta.encoder.layer.10.attention.self.value.bias', 'bert.roberta.encoder.layer.10.attention.output.dense.weight', 'bert.roberta.encoder.layer.10.attention.output.dense.bias', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.10.intermediate.dense.weight', 'bert.roberta.encoder.layer.10.intermediate.dense.bias', 'bert.roberta.encoder.layer.10.output.dense.weight', 'bert.roberta.encoder.layer.10.output.dense.bias', 'bert.roberta.encoder.layer.10.output.LayerNorm.weight', 'bert.roberta.encoder.layer.10.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.attention.self.query.weight', 'bert.roberta.encoder.layer.11.attention.self.query.bias', 'bert.roberta.encoder.layer.11.attention.self.key.weight', 'bert.roberta.encoder.layer.11.attention.self.key.bias', 'bert.roberta.encoder.layer.11.attention.self.value.weight', 'bert.roberta.encoder.layer.11.attention.self.value.bias', 'bert.roberta.encoder.layer.11.attention.output.dense.weight', 'bert.roberta.encoder.layer.11.attention.output.dense.bias', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.roberta.encoder.layer.11.intermediate.dense.weight', 'bert.roberta.encoder.layer.11.intermediate.dense.bias', 'bert.roberta.encoder.layer.11.output.dense.weight', 'bert.roberta.encoder.layer.11.output.dense.bias', 'bert.roberta.encoder.layer.11.output.LayerNorm.weight', 'bert.roberta.encoder.layer.11.output.LayerNorm.bias', 'bert.lm_head.bias', 'bert.lm_head.dense.weight', 'bert.lm_head.dense.bias', 'bert.lm_head.layer_norm.weight', 'bert.lm_head.layer_norm.bias', 'bert.lm_head.decoder.weight', 'bert.lm_head.decoder.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
The model and loaded state dict do not match exactly

unexpected key in source state_dict: norm.weight, norm.bias, head.weight, head.bias, layers.0.blocks.1.attn_mask, layers.1.blocks.1.attn_mask, layers.2.blocks.1.attn_mask, layers.2.blocks.3.attn_mask, layers.2.blocks.5.attn_mask, layers.2.blocks.7.attn_mask, layers.2.blocks.9.attn_mask, layers.2.blocks.11.attn_mask, layers.2.blocks.13.attn_mask, layers.2.blocks.15.attn_mask, layers.2.blocks.17.attn_mask

missing keys in source state_dict: norm3.weight, norm3.bias

2024-10-31 03:19:17 - train.py[line:101] - INFO: PolyFormerModel(
  (encoder): TransformerEncoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(4100, 768, padding_idx=1)
    (layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (type_embedding): Embedding(2, 768)
    (embed_images): SwinTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 128, kernel_size=(4, 4), stride=(4, 4))
        (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      )
      (pos_drop): Dropout(p=0.0, inplace=False)
      (layers): ModuleList(
        (0): BasicLayer(
          (blocks): ModuleList(
            (0): SwinTransformerBlock(
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=128, out_features=384, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=128, out_features=128, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): Identity()
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=128, out_features=512, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=512, out_features=128, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (1): SwinTransformerBlock(
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=128, out_features=384, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=128, out_features=128, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.009)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=128, out_features=512, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=512, out_features=128, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
          )
          (downsample): PatchMerging(
            (reduction): Linear(in_features=512, out_features=256, bias=False)
            (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
        )
        (1): BasicLayer(
          (blocks): ModuleList(
            (0): SwinTransformerBlock(
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=256, out_features=768, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=256, out_features=256, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.017)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=256, out_features=1024, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=1024, out_features=256, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (1): SwinTransformerBlock(
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=256, out_features=768, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=256, out_features=256, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.026)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=256, out_features=1024, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=1024, out_features=256, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
          )
          (downsample): PatchMerging(
            (reduction): Linear(in_features=1024, out_features=512, bias=False)
            (norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
          )
        )
        (2): BasicLayer(
          (blocks): ModuleList(
            (0): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.035)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (1): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.043)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (2): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.052)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (3): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.061)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (4): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.070)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (5): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.078)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (6): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.087)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (7): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.096)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (8): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.104)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (9): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.113)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (10): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.122)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (11): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.130)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (12): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.139)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (13): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.148)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (14): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.157)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (15): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.165)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (16): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.174)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (17): SwinTransformerBlock(
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=512, out_features=1536, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=512, out_features=512, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.183)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=512, out_features=2048, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=2048, out_features=512, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
          )
          (downsample): PatchMerging(
            (reduction): Linear(in_features=2048, out_features=1024, bias=False)
            (norm): LayerNorm((2048,), eps=1e-05, elementwise_affine=True)
          )
        )
        (3): BasicLayer(
          (blocks): ModuleList(
            (0): SwinTransformerBlock(
              (norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=1024, out_features=3072, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=1024, out_features=1024, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.191)
              (norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
            (1): SwinTransformerBlock(
              (norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (attn): WindowAttention(
                (qkv): Linear(in_features=1024, out_features=3072, bias=True)
                (attn_drop): Dropout(p=0.0, inplace=False)
                (proj): Linear(in_features=1024, out_features=1024, bias=True)
                (proj_drop): Dropout(p=0.0, inplace=False)
                (softmax): Softmax(dim=-1)
              )
              (drop_path): DropPath(drop_prob=0.200)
              (norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (mlp): Mlp(
                (fc1): Linear(in_features=1024, out_features=4096, bias=True)
                (act): GELU(approximate='none')
                (fc2): Linear(in_features=4096, out_features=1024, bias=True)
                (drop): Dropout(p=0.0, inplace=False)
              )
            )
          )
        )
      )
      (norm3): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    )
    (image_proj): Linear(in_features=1024, out_features=768, bias=True)
    (patch_layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (embed_positions): Embedding(1026, 768)
    (embed_image_positions): Embedding(1765, 768)
    (pos_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (image_pos_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (pos_q_linear): Linear(in_features=768, out_features=768, bias=True)
    (pos_k_linear): Linear(in_features=768, out_features=768, bias=True)
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): Identity()
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.019999999552965164)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.03999999910593033)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.06000000238418579)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.07999999821186066)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.10000000149011612)
      )
    )
    (layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (token_rel_pos_table_list): ModuleList(
      (0): Embedding(511, 12)
      (1): Embedding(511, 12)
      (2): Embedding(511, 12)
      (3): Embedding(511, 12)
      (4): Embedding(511, 12)
      (5): Embedding(511, 12)
    )
    (image_rel_pos_table_list): ModuleList(
      (0): Embedding(6892, 12)
      (1): Embedding(6892, 12)
      (2): Embedding(6892, 12)
      (3): Embedding(6892, 12)
      (4): Embedding(6892, 12)
      (5): Embedding(6892, 12)
    )
    (bert): XLMRobertaForMaskedLM(
      (roberta): XLMRobertaModel(
        (embeddings): XLMRobertaEmbeddings(
          (word_embeddings): Embedding(250002, 768, padding_idx=1)
          (position_embeddings): Embedding(514, 768, padding_idx=1)
          (token_type_embeddings): Embedding(1, 768)
          (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.1, inplace=False)
        )
        (encoder): XLMRobertaEncoder(
          (layer): ModuleList(
            (0): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (1): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (2): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (3): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (4): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (5): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (6): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (7): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (8): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (9): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (10): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (11): XLMRobertaLayer(
              (attention): XLMRobertaAttention(
                (self): XLMRobertaSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
                (output): XLMRobertaSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                  (dropout): Dropout(p=0.1, inplace=False)
                )
              )
              (intermediate): XLMRobertaIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
                (intermediate_act_fn): GELUActivation()
              )
              (output): XLMRobertaOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
          )
        )
      )
      (lm_head): XLMRobertaLMHead(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (decoder): Linear(in_features=768, out_features=250002, bias=True)
      )
    )
  )
  (decoder): TransformerDecoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(4100, 768, padding_idx=1)
    (layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (embed_positions): Embedding(1026, 768)
    (embed_image_positions): Embedding(1765, 768)
    (pos_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (image_pos_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (self_pos_q_linear): Linear(in_features=768, out_features=768, bias=True)
    (self_pos_k_linear): Linear(in_features=768, out_features=768, bias=True)
    (cross_pos_q_linear): Linear(in_features=768, out_features=768, bias=True)
    (cross_pos_k_linear): Linear(in_features=768, out_features=768, bias=True)
    (code_layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (layers): ModuleList(
      (0): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (cross_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): Identity()
      )
      (1): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (cross_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.019999999552965164)
      )
      (2): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (cross_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.03999999910593033)
      )
      (3): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (cross_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.06000000238418579)
      )
      (4): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (cross_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.07999999821186066)
      )
      (5): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (cross_attn_ln): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (ffn_layernorm): LayerNorm((3072,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (drop_path): DropPath(p=0.10000000149011612)
      )
    )
    (layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (reg_head): MLP(
      (layers): ModuleList(
        (0): Linear(in_features=768, out_features=768, bias=True)
        (1): Linear(in_features=768, out_features=768, bias=True)
        (2): Linear(in_features=768, out_features=2, bias=True)
      )
    )
    (cls_head): Linear(in_features=768, out_features=3, bias=False)
    (token_rel_pos_table_list): ModuleList(
      (0): Embedding(511, 12)
      (1): Embedding(511, 12)
      (2): Embedding(511, 12)
      (3): Embedding(511, 12)
      (4): Embedding(511, 12)
      (5): Embedding(511, 12)
    )
    (image_rel_pos_table_list): ModuleList(
      (0): Embedding(6892, 12)
      (1): Embedding(6892, 12)
      (2): Embedding(6892, 12)
      (3): Embedding(6892, 12)
      (4): Embedding(6892, 12)
      (5): Embedding(6892, 12)
    )
  )
  (classification_heads): ModuleDict()
)
2024-10-31 03:19:17 - train.py[line:102] - INFO: task: RefcocoPretrainTask
2024-10-31 03:19:17 - train.py[line:103] - INFO: model: PolyFormerModel
2024-10-31 03:19:17 - train.py[line:104] - INFO: criterion: AdjustLabelSmoothedCrossEntropyCriterion
2024-10-31 03:19:17 - train.py[line:108] - INFO: num. shared model params: 478,547,732 (num. trained: 478,547,732)
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 4 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 3 begin to initialize row_count and line_idx-to-offset mapping
2024-10-31 03:19:17 - train.py[line:115] - INFO: num. expert model params: 0 (num. trained: 0)
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 0 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 3 finished initializing row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 4 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 3 row count 1037 total row count 8297
file ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 4 row count 1037 total row count 8297
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 0 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 0 row count 1038 total row count 8297
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 2 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 2 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 2 row count 1037 total row count 8297
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 1 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 1 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 1 row count 1037 total row count 8297
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 6 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 6 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 6 row count 1037 total row count 8297
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 5 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 5 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 5 row count 1037 total row count 8297
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 7 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 7 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/val_aihub_indoor.tsv slice_id 7 row count 1037 total row count 8297
2024-10-31 03:19:18 - distributed_c10d.py[line:319] - INFO: Added key: store_based_barrier_key:2 to store for rank: 0
2024-10-31 03:19:18 - distributed_c10d.py[line:354] - INFO: Rank 0: Completed store-based barrier for key:store_based_barrier_key:2 with 8 nodes.
2024-10-31 03:19:18 - trainer.py[line:124] - INFO: detected shared parameter: encoder.embed_tokens.weight <- decoder.embed_tokens.weight
2024-10-31 03:19:18 - trainer.py[line:124] - INFO: detected shared parameter: encoder.embed_images.layers.0.downsample.reduction.bias <- encoder.embed_images.layers.1.downsample.reduction.bias
2024-10-31 03:19:18 - trainer.py[line:124] - INFO: detected shared parameter: encoder.embed_images.layers.0.downsample.reduction.bias <- encoder.embed_images.layers.2.downsample.reduction.bias
2024-10-31 03:19:18 - trainer.py[line:124] - INFO: detected shared parameter: encoder.embed_images.layers.0.downsample.reduction.bias <- decoder.cls_head.bias
2024-10-31 03:19:18 - trainer.py[line:124] - INFO: detected shared parameter: encoder.bert.roberta.embeddings.word_embeddings.weight <- encoder.bert.lm_head.decoder.weight
2024-10-31 03:19:18 - trainer.py[line:124] - INFO: detected shared parameter: encoder.bert.lm_head.bias <- encoder.bert.lm_head.decoder.bias
2024-10-31 03:19:21 - utils.py[line:759] - INFO: ***********************CUDA enviroments for all 8 workers***********************
2024-10-31 03:19:21 - utils.py[line:765] - INFO: rank   0: capabilities =  8.0  ; total memory = 39.394 GB ; name = NVIDIA A100-SXM4-40GB                   
2024-10-31 03:19:21 - utils.py[line:765] - INFO: rank   1: capabilities =  8.0  ; total memory = 39.394 GB ; name = NVIDIA A100-SXM4-40GB                   
2024-10-31 03:19:21 - utils.py[line:765] - INFO: rank   2: capabilities =  8.0  ; total memory = 39.394 GB ; name = NVIDIA A100-SXM4-40GB                   
2024-10-31 03:19:21 - utils.py[line:765] - INFO: rank   3: capabilities =  8.0  ; total memory = 39.394 GB ; name = NVIDIA A100-SXM4-40GB                   
2024-10-31 03:19:21 - utils.py[line:765] - INFO: rank   4: capabilities =  8.0  ; total memory = 39.394 GB ; name = NVIDIA A100-SXM4-40GB                   
2024-10-31 03:19:21 - utils.py[line:765] - INFO: rank   5: capabilities =  8.0  ; total memory = 39.394 GB ; name = NVIDIA A100-SXM4-40GB                   
2024-10-31 03:19:21 - utils.py[line:765] - INFO: rank   6: capabilities =  8.0  ; total memory = 39.394 GB ; name = NVIDIA A100-SXM4-40GB                   
2024-10-31 03:19:21 - utils.py[line:765] - INFO: rank   7: capabilities =  8.0  ; total memory = 39.394 GB ; name = NVIDIA A100-SXM4-40GB                   
2024-10-31 03:19:21 - utils.py[line:767] - INFO: ***********************CUDA enviroments for all 8 workers***********************
2024-10-31 03:19:21 - train.py[line:145] - INFO: training on 8 devices (GPUs/TPUs)
2024-10-31 03:19:21 - train.py[line:151] - INFO: max tokens per device = None and max sentences per device = 20
2024-10-31 03:19:21 - trainer.py[line:458] - INFO: Preparing to load checkpoint ./polyformer_b_pretrain_aihub_indoor_80_checkpoints/20_5e-5_512/checkpoint_last.pt
2024-10-31 03:19:21 - trainer.py[line:624] - INFO: No existing checkpoint found ./polyformer_b_pretrain_aihub_indoor_80_checkpoints/20_5e-5_512/checkpoint_last.pt
2024-10-31 03:19:21 - trainer.py[line:639] - INFO: loading train data for epoch 1
local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 6 begin to initialize row_count and line_idx-to-offset mappinglocal datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 2 begin to initialize row_count and line_idx-to-offset mappinglocal datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 5 begin to initialize row_count and line_idx-to-offset mappinglocal datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 7 begin to initialize row_count and line_idx-to-offset mappinglocal datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 1 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 3 begin to initialize row_count and line_idx-to-offset mappinglocal datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 4 begin to initialize row_count and line_idx-to-offset mapping





local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 0 begin to initialize row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 3 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 3 row count 50000 total row count 400000
local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 5 finished initializing row_count and line_idx-to-offset mapping
local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 6 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 5 row count 50000 total row count 400000
file ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 6 row count 50000 total row count 400000
local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 7 finished initializing row_count and line_idx-to-offset mappinglocal datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 1 finished initializing row_count and line_idx-to-offset mappinglocal datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 2 finished initializing row_count and line_idx-to-offset mapping


file ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 2 row count 50000 total row count 400000file ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 7 row count 50000 total row count 400000

file ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 1 row count 50000 total row count 400000
local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 0 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 0 row count 50000 total row count 400000
local datafile ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 4 finished initializing row_count and line_idx-to-offset mapping
file ../../datasets/pretrain/train_aihub_indoor_80.tsv slice_id 4 row count 50000 total row count 400000
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torchvision/transforms/functional.py:443: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  "Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. "
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torchvision/transforms/functional.py:443: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  "Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. "
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torchvision/transforms/functional.py:443: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  "Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. "
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torchvision/transforms/functional.py:443: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  "Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. "
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torchvision/transforms/functional.py:443: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  "Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. "
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torchvision/transforms/functional.py:443: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  "Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. "
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torchvision/transforms/functional.py:443: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  "Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. "
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torchvision/transforms/functional.py:443: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  "Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. "
slice_id 5 seek offset 250000
slice_id 3 seek offset 150000
slice_id 1 seek offset 50000
slice_id 6 seek offset 300000
slice_id 7 seek offset 350000
slice_id 2 seek offset 100000
Total steps 6260, warmup steps 375, warmup_factor 0.0026666666666666666
slice_id 0 seek offset 0
Total steps 6260, warmup steps 375, warmup_factor 0.0026666666666666666
slice_id 4 seek offset 200000
Total steps 6260, warmup steps 375, warmup_factor 0.0026666666666666666
Total steps 6260, warmup steps 375, warmup_factor 0.0026666666666666666
Total steps 6260, warmup steps 375, warmup_factor 0.0026666666666666666
Total steps 6260, warmup steps 375, warmup_factor 0.0026666666666666666
Total steps 6260, warmup steps 375, warmup_factor 0.0026666666666666666
Total steps 6260, warmup steps 375, warmup_factor 0.0026666666666666666
2024-10-31 03:19:24 - trainer.py[line:703] - INFO: begin training epoch 1
2024-10-31 03:19:24 - train.py[line:297] - INFO: Start iterating over samples
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/nn/functional.py:1967: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/nn/functional.py:1967: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/nn/functional.py:1967: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/nn/functional.py:1967: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/nn/functional.py:1967: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/nn/functional.py:1967: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/nn/functional.py:1967: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/home/jovyan/SSDb/miniconda3/envs/polyformer/lib/python3.7/site-packages/torch/nn/functional.py:1967: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
loss_reg: 0.339111328125 loss_cls: 0.0
loss_reg: 0.32373046875 loss_cls: 0.0
loss_reg: 0.38623046875 loss_cls: 0.0
loss_reg: 0.339599609375 loss_cls: 0.0
loss_reg: 0.35107421875 loss_cls: 0.0
loss_reg: 0.378662109375 loss_cls: 0.0
loss_reg: 0.33447265625 loss_cls: 0.0
loss_reg: 0.36572265625 loss_cls: 0.0
loss_reg: 0.319580078125 loss_cls: 0.0
loss_reg: 0.327392578125 loss_cls: 0.0
loss_reg: 0.33544921875 loss_cls: 0.0
loss_reg: 0.36767578125 loss_cls: 0.0
loss_reg: 0.343505859375 loss_cls: 0.0
loss_reg: 0.322021484375 loss_cls: 0.0
loss_reg: 0.31640625 loss_cls: 0.0
loss_reg: 0.333740234375 loss_cls: 0.0
loss_reg: 0.32080078125 loss_cls: 0.0
loss_reg: 0.387451171875 loss_cls: 0.0
loss_reg: 0.30126953125 loss_cls: 0.0
loss_reg: 0.34912109375 loss_cls: 0.0
loss_reg: 0.3525390625 loss_cls: 0.0
loss_reg: 0.361328125 loss_cls: 0.0
loss_reg: 0.3466796875 loss_cls: 0.0
loss_reg: 0.342041015625 loss_cls: 0.0
loss_reg: 0.335205078125 loss_cls: 0.0
loss_reg: 0.343994140625 loss_cls: 0.0
loss_reg: 0.3515625 loss_cls: 0.0
loss_reg: 0.32177734375 loss_cls: 0.0
loss_reg: 0.3349609375 loss_cls: 0.0
loss_reg: 0.333740234375 loss_cls: 0.0
loss_reg: 0.31201171875 loss_cls: 0.0
loss_reg: 0.34375 loss_cls: 0.0
loss_reg: 0.364990234375 loss_cls: 0.0
loss_reg: 0.326171875 loss_cls: 0.0
loss_reg: 0.376953125 loss_cls: 0.0
loss_reg: 0.359375 loss_cls: 0.0
loss_reg: 0.34716796875 loss_cls: 0.0
loss_reg: 0.318603515625 loss_cls: 0.0
loss_reg: 0.34375 loss_cls: 0.0
loss_reg: 0.377685546875 loss_cls: 0.0
loss_reg: 0.36181640625 loss_cls: 0.0
loss_reg: 0.30908203125 loss_cls: 0.0
loss_reg: 0.32421875 loss_cls: 0.0
loss_reg: 0.33154296875 loss_cls: 0.0
loss_reg: 0.33203125 loss_cls: 0.0
loss_reg: 0.353515625 loss_cls: 0.0
loss_reg: 0.35546875 loss_cls: 0.0
loss_reg: 0.38916015625 loss_cls: 0.0
loss_reg: 0.323974609375 loss_cls: 0.0
loss_reg: 0.310546875 loss_cls: 0.0
loss_reg: 0.35546875 loss_cls: 0.0
loss_reg: 0.30126953125 loss_cls: 0.0
loss_reg: 0.37744140625 loss_cls: 0.0
loss_reg: 0.273681640625 loss_cls: 0.0
loss_reg: 0.384765625 loss_cls: 0.0
loss_reg: 0.3603515625 loss_cls: 0.0
loss_reg: 0.32421875 loss_cls: 0.0
loss_reg: 0.33056640625 loss_cls: 0.0
loss_reg: 0.31494140625 loss_cls: 0.0
loss_reg: 0.337890625 loss_cls: 0.0
loss_reg: 0.31201171875 loss_cls: 0.0
loss_reg: 0.320556640625 loss_cls: 0.0
loss_reg: 0.3359375 loss_cls: 0.0
loss_reg: 0.313232421875 loss_cls: 0.0
2024-10-31 03:21:33 - progress_bar.py[line:274] - INFO: epoch 001:     10 / 313 loss=0.017, loss_v1=0, loss_v2=0, nll_loss=3.25, ntokens=5118.1, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=9.51, wps=420.8, ups=0.08, wpb=5118.1, bsz=1280, num_updates=10, lr=1.33333e-06, gnorm=0.033, clip=0, loss_scale=128, train_wall=47, gb_free=9.5, wall=132
2024-10-31 03:23:36 - progress_bar.py[line:274] - INFO: epoch 001:     20 / 313 loss=0.016, loss_v1=0, loss_v2=0, nll_loss=3.328, ntokens=5118.3, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=10.04, wps=414.7, ups=0.08, wpb=5118.3, bsz=1280, num_updates=20, lr=2.66667e-06, gnorm=0.019, clip=0, loss_scale=128, train_wall=65, gb_free=9.5, wall=255
2024-10-31 03:25:41 - progress_bar.py[line:274] - INFO: epoch 001:     30 / 313 loss=0.015, loss_v1=0, loss_v2=0, nll_loss=3.446, ntokens=5117.3, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=10.9, wps=409.9, ups=0.08, wpb=5117.3, bsz=1280, num_updates=30, lr=4e-06, gnorm=0.012, clip=0, loss_scale=128, train_wall=92, gb_free=9.4, wall=380
2024-10-31 03:27:44 - progress_bar.py[line:274] - INFO: epoch 001:     40 / 313 loss=0.015, loss_v1=0, loss_v2=0, nll_loss=3.691, ntokens=5118.6, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=12.91, wps=415.7, ups=0.08, wpb=5118.6, bsz=1280, num_updates=40, lr=5.33333e-06, gnorm=0.013, clip=0, loss_scale=128, train_wall=110, gb_free=9.5, wall=503
2024-10-31 03:29:46 - progress_bar.py[line:274] - INFO: epoch 001:     50 / 313 loss=0.013, loss_v1=0, loss_v2=0, nll_loss=3.894, ntokens=5118.6, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=14.87, wps=420.5, ups=0.08, wpb=5118.6, bsz=1280, num_updates=50, lr=6.66667e-06, gnorm=0.016, clip=0, loss_scale=128, train_wall=120, gb_free=9.5, wall=625
2024-10-31 03:31:48 - progress_bar.py[line:274] - INFO: epoch 001:     60 / 313 loss=0.012, loss_v1=0, loss_v2=0, nll_loss=3.796, ntokens=5117.4, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=13.89, wps=419.9, ups=0.08, wpb=5117.4, bsz=1280, num_updates=60, lr=8e-06, gnorm=0.016, clip=0, loss_scale=128, train_wall=122, gb_free=9.5, wall=747
2024-10-31 03:33:50 - progress_bar.py[line:274] - INFO: epoch 001:     70 / 313 loss=0.011, loss_v1=0, loss_v2=0, nll_loss=3.989, ntokens=5118.3, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=15.88, wps=418.6, ups=0.08, wpb=5118.3, bsz=1280, num_updates=70, lr=9.33333e-06, gnorm=0.013, clip=0, loss_scale=128, train_wall=122, gb_free=9.5, wall=869
2024-10-31 03:35:53 - progress_bar.py[line:274] - INFO: epoch 001:     80 / 313 loss=0.01, loss_v1=0, loss_v2=0, nll_loss=4.233, ntokens=5118.5, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=18.8, wps=417.2, ups=0.08, wpb=5118.5, bsz=1280, num_updates=80, lr=1.06667e-05, gnorm=0.011, clip=0, loss_scale=128, train_wall=123, gb_free=9.6, wall=992
2024-10-31 03:37:56 - progress_bar.py[line:274] - INFO: epoch 001:     90 / 313 loss=0.01, loss_v1=0, loss_v2=0, nll_loss=4.199, ntokens=5117.5, nsentences=1280, sample_size=1280, sample_size_v1=0, sample_size_v2=0, ppl=18.37, wps=416.8, ups=0.08, wpb=5117.5, bsz=1280, num_updates=90, lr=1.2e-05, gnorm=0.009, clip=0, loss_scale=128, train_wall=123, gb_free=9.5, wall=1114
